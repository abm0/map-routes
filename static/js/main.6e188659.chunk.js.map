{"version":3,"sources":["store/actionTypes.js","store/reducers/addresses.js","helpers/index.js","store/reducers/points.js","store/reducers/index.js","store/actionCreators.js","store/sagas.js","store/index.js","store/localStorage.js","components/Map/index.js","assets/svg/spinner.svg","components/Spinner/Spinner.styled.js","components/Spinner/index.js","components/AddressInput/AddressInput.styled.js","components/AddressInput/index.js","styles/styled-mixins/button.js","components/AddressItem/AddressItem.styled.js","components/AddressItem/index.js","components/AddressList/AddressList.styled.js","components/AddressList/index.js","components/Address/Address.styled.js","components/Address/index.js","components/Point/Point.styled.js","components/Point/index.js","components/PointsList/PointsList.styled.js","components/PointsList/index.js","components/App/App.styled.js","components/App/index.js","serviceWorker.js","index.js"],"names":["ADDRESS_LIST_FETCH","POINT_POSITION_CHANGE","addressesReducer","handleActions","_handleActions","Object","defineProperty","actionTypes","state","objectSpread","isFetching","list","action","toConsumableArray","addressList","PropTypes","string","generateAddressId","Date","getUTCMilliseconds","formatReverseGeocodeResponse","res","coordinates","description","geoObjects","get","properties","name","split","_coordinates$map","map","value","toString","_coordinates$map2","slicedToArray","lng","lat","formatGeocodeResponse","toArray","geoObject","_geoObject$geometry$g","geometry","getCoordinates","_geoObject$geometry$g2","pointsReducer","points_handleActions","nextState","cloneDeep","byId","newId","id","values","filter","point","address","length","isSaving","ids","concat","splice","indexOf","oldIndex","newIndex","reorderedIds","arr","console","log","arrCopy","element","leftArr","slice","rightArr","moveElement","data","number","bool","combineReducers","addresses","points","fetchAddressListSuccess","type","fetchAddressListFail","updatePointPositionSuccess","updatePointPositionFail","updatePointPosition","fetchAddressList","watchAddressListFetch","watchPointPositionUpdate","rootSaga","geocodeFn","response","geoData","regenerator_default","a","wrap","_context","prev","next","call","sent","put","t0","stop","_marked","_context2","_marked2","_context3","takeEvery","_marked3","_context4","_marked4","_context5","all","_marked5","persistedState","namespace","serializedState","localStorage","getItem","JSON","parse","err","loadState","composeEnchancers","composeWithDevTools","sagaMiddleware","createSagaMiddleware","storeEnchancers","applyMiddleware","store","createStore","reducers","run","sagas","subscribe","stringify","setItem","_unused","saveState","getState","mapConfig","center","zoom","controls","Map","orderedPoints","onDragEnd","_callee","e","_this$props","ymaps","_this","props","originalEvent","target","_coordinates","geocode","this","index","_this2","placeMark","parseFloat","iconContent","hintContent","balloonContentHeader","balloonContentBody","options","preset","draggable","hintHideTimeout","modules","react_default","createElement","react_yandex_maps_esm","assign","key","_this3","onMapLoad","defaultState","width","height","onLoad","onError","error","renderPlacemark","getPolylineGeometry","nextProps","prevState","pointsById","forEach","push","prevIds","newState","lastPoint","getLastPointCoordinates","React","Component","defaultProps","mapActionCreators","connect","withYMaps","_extends","i","arguments","source","prototype","hasOwnProperty","apply","_objectWithoutProperties","excluded","sourceKeys","keys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","fill","fillRule","transform","strokeWidth","cx","cy","r","strokeOpacity","attributeName","begin","dur","calcMode","repeatCount","spinner_SvgSpinner","_ref","svgRef","viewBox","stroke","ref","ForwardRef","forwardRef","__webpack_require__","p","SpinnerIcon","styled","withConfig","displayName","componentId","large","color","Spinner","alt","AddressInputBlock","div","Input","input","EnterButtonIcon","span","AddressInput","classCallCheck","possibleConstructorReturn","getPrototypeOf","asyncToGenerator","mark","_x","handleInputChange","persist","setState","debouncedFetchAddressList","handleKeyDown","onSubmit","keyCode","clearInputValue","debounce","_this$props2","onClickOutside","isAddressFetching","isAddressListVisible","isEnterIconVisible","react_outside_click_handler_default","onOutsideClick","data-e2e-id","placeholder","onChange","onKeyDown","components_Spinner","styled_mixins_button","darken","AddressItemBlock","li","ItemName","AddButton","button","AddressItem","handleAddClick","onClick","className","AddressListContainer","ul","isVisible","addPoint","components_AddressItem","AddressBlock","Address","_Component","_getPrototypeOf2","_len","args","Array","_key","hideAddressList","onAddressInputSubmit","inherits","createClass","prevProps","showAddressList","components_AddressInput","components_AddressList","PointContainer","DragHandle","PointName","RemoveButton","ButtonIcon","Point","onPointRemove","provided","dragHandleProps","PointsListContainer","PointsList","result","reason","changePointOrder","destination","addressId","draggableId","removePoint","react_beautiful_dnd_esm","droppableId","innerRef","droppableProps","draggableProps","components_Point","dropData","Wrapper","PointsListWrapper","LoadingOverlay","App","isMapLoaded","handleMapLoad","Fragment","es","query","ns","apikey","load","components_Map","components_Address","components_PointsList","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6e188659.chunk.js","sourcesContent":["export const ADDRESS_LIST_FETCH = 'ADDRESS_LIST_FETCH';\nexport const ADDRESS_LIST_FETCH_SUCCESS = 'ADDRESS_LIST_FETCH_SUCCESS';\nexport const ADDRESS_LIST_FETCH_FAIL = 'ADDRESS_LIST_FETCH_FAIL';\n\nexport const POINT_ADD = 'POINT_ADD';\nexport const POINT_REMOVE = 'POINT_REMOVE';\n\nexport const POINT_ORDER_CHANGE = 'POINT_ORDER_CHANGE';\nexport const POINT_POSITION_CHANGE = 'POINT_POSITION_CHANGE';\nexport const POINT_POSITION_CHANGE_SUCCESS = 'POINT_POSITION_CHANGE_SUCCESS';\nexport const POINT_POSITION_CHANGE_FAIL = 'POINT_POSITION_CHANGE_FAIL';\n","import PropTypes from 'prop-types';\nimport { handleActions } from 'redux-actions';\n\nimport * as actionTypes from '../actionTypes';\n\nexport const initialAddressesState = {\n  list: [],\n  isFetching: false,\n};\n\nconst addressesReducer = handleActions({\n  [actionTypes.ADDRESS_LIST_FETCH]: state => ({\n    ...state,\n    isFetching: true,\n    list: [],\n  }),\n\n  [actionTypes.ADDRESS_LIST_FETCH_SUCCESS]: (state, action) => ({\n    ...state,\n    list: [...action.addressList],\n    isFetching: false,\n  }),\n\n  [actionTypes.ADDRESS_LIST_FETCH_FAIL]: state => ({\n    ...state,\n    isFetching: false,\n  }),\n}, initialAddressesState);\n\nexport const addressShape = {\n  lat: PropTypes.string,\n  lng: PropTypes.string,\n  name: PropTypes.string,\n  description: PropTypes.string,\n};\n\nexport default addressesReducer;","export const moveElement = (arr, oldIndex, newIndex) => {\n  if (oldIndex > arr.length - 1 || newIndex > arr.length - 1) {\n    console.log(\"Position exceeds array length\");\n    return arr;\n  }\n\n  const arrCopy = [...arr];\n\n  const element = arrCopy.splice(oldIndex, 1);\n  const leftArr = arrCopy.slice(0, newIndex);\n  const rightArr = arrCopy.slice(newIndex);\n\n  return [...leftArr, ...element, ...rightArr];\n}\n\nexport const generateAddressId = () =>\n  new Date().getUTCMilliseconds()\n\nexport const isPointAdded = (prevIds, nextIds) => {\n  return nextIds.length > prevIds.length;\n};\n\nexport const getLastPointCoordinates = (orderedPoints) => {\n  const lastPoint = orderedPoints[orderedPoints.length - 1];\n\n  return [\n    lastPoint.lng,\n    lastPoint.lat,\n  ];\n};\n\nexport const formatReverseGeocodeResponse = (res, coordinates) => {\n  const description = res.geoObjects.get(0).properties.get('text');\n  const addressArr = description.split(', ');\n  const name = addressArr[1];\n  const [lng, lat] = coordinates.map((value => value.toString()));\n\n  return {\n    lng,\n    lat,\n    name,\n    description,\n  };\n};\n\nexport const formatGeocodeResponse = (res) => {\n  const geoObjectsArr = res.geoObjects.toArray();\n\n  const formattedData = geoObjectsArr.map((geoObject) => {\n    const [lng, lat] = \n      geoObject.geometry\n        .getCoordinates()\n        .map(value => value.toString());\n      \n    const name = geoObject.properties.get('name');\n    const description = geoObject.properties.get('text');\n\n    return {\n      lng,\n      lat,\n      name,\n      description,\n    };\n  });\n  \n  return formattedData;\n};","import PropTypes from 'prop-types';\nimport { handleActions } from 'redux-actions';\nimport { moveElement } from 'helpers';\n\nimport cloneDeep from 'lodash/cloneDeep';\nimport * as actionTypes from '../actionTypes';\n\nexport const initialPointsState = {\n  byId: {},\n  ids: [],\n};\n\nconst pointsReducer = handleActions({\n  [actionTypes.POINT_ADD]: (state, action) => {\n    const nextState = cloneDeep(state);\n    const { byId } = nextState;\n    const newId = action.id;\n\n    const presentPoint = Object.values(byId).filter(point =>\n      point.lat === action.address.lat &&\n      point.lng === action.address.lng,\n    );\n\n    if (presentPoint.length) {\n      return { ...nextState };\n    }\n    \n    return {\n      ...nextState,\n      byId: {\n        ...nextState.byId,\n        [newId]: {\n          ...action.address,\n          id: newId,\n          isSaving: false,\n        },\n      },\n      ids: [...nextState.ids, newId],\n    };\n  },\n  \n  [actionTypes.POINT_REMOVE]: (state, action) => {\n    const nextState = cloneDeep(state);\n    const {\n      byId, \n      ids,\n    } = nextState;\n    const { id } = action;\n\n    ids.splice(ids.indexOf(id), 1);\n    delete byId[id];\n\n    return {\n      ...nextState,\n      byId: { ...byId },\n      ids: [...ids],\n    };\n  },\n  \n  [actionTypes.POINT_ORDER_CHANGE]: (state, action) => {\n    const nextState = cloneDeep(state);\n    \n    const {\n      oldIndex,\n      newIndex,\n    } = action;\n\n    const { ids } = nextState;\n\n    const reorderedIds = moveElement(ids, oldIndex, newIndex)\n\n    return {\n      ...nextState,\n      ids: reorderedIds,\n    };\n  },\n\n  [actionTypes.POINT_POSITION_CHANGE]: (state, action) => {\n    const nextState = cloneDeep(state);\n    const { id } = action;\n    \n    return {\n      ...nextState,\n      byId: {\n        ...nextState.byId,\n        [id]: {\n          ...nextState.byId[id],\n          isSaving: true,\n        },\n      },\n    };\n  },\n  \n  [actionTypes.POINT_POSITION_CHANGE_SUCCESS]: (state, action) => {\n    const nextState = cloneDeep(state);\n    \n    const {\n      data,\n      id,\n    } = action;\n    \n    const { byId } = nextState;\n\n    const point = { ...data };\n\n    point.id = id;\n    point.lng = point.lng.toString();\n    point.lat = point.lat.toString();\n\n    return {\n      ...nextState,\n      byId: {\n        ...byId,\n        [id]: {\n          ...point,\n          isSaving: false,\n        },\n      },\n    }\n  },\n}, initialPointsState);\n\nexport const pointShape = {\n  id: PropTypes.number,\n  name: PropTypes.string,\n  description: PropTypes.string,\n  lat: PropTypes.string,\n  lng: PropTypes.string,\n  isSaving: PropTypes.bool,\n};\n\nexport default pointsReducer;","import { combineReducers } from 'redux';\n\nimport addresses from './addresses';\nimport points from './points';\n\nexport default combineReducers({\n  addresses,\n  points,\n});","import * as actionTypes from './actionTypes';\n\nexport const fetchAddressList = (value, geocodeFn) => ({ \n  type: actionTypes.ADDRESS_LIST_FETCH, \n  value,\n  geocodeFn,\n});\n\nexport const fetchAddressListSuccess = (data) => ({\n  type: actionTypes.ADDRESS_LIST_FETCH_SUCCESS, \n  addressList: data,\n});\n\nexport const fetchAddressListFail = () => ({\n  type: actionTypes.ADDRESS_LIST_FETCH_FAIL, \n});\n\nexport const addPoint = (address, id) => ({\n  type: actionTypes.POINT_ADD,\n  address,\n  id,\n});\n\nexport const removePoint = (id) => ({\n  type: actionTypes.POINT_REMOVE,\n  id,\n});\n\nexport const changePointOrder = (dropData) => ({\n  type: actionTypes.POINT_ORDER_CHANGE,\n  ...dropData,\n});\n\nexport const updatePointPosition = (id, geocodeFn, coordinates) => ({\n  type: actionTypes.POINT_POSITION_CHANGE,\n  id,\n  geocodeFn,\n  coordinates,\n});\n\nexport const updatePointPositionSuccess = (data, id) => ({\n  type: actionTypes.POINT_POSITION_CHANGE_SUCCESS,\n  data,\n  id,\n});\n\nexport const updatePointPositionFail = () => ({\n  type: actionTypes.POINT_POSITION_CHANGE_FAIL,\n});","import { put, call, takeEvery, all } from 'redux-saga/effects';\nimport { \n  formatGeocodeResponse,\n  formatReverseGeocodeResponse,\n} from 'helpers';\n\nimport {\n  fetchAddressListSuccess, \n  fetchAddressListFail,\n  updatePointPositionSuccess,\n  updatePointPositionFail,\n} from 'store/actionCreators';\n\nimport * as actionTypes from 'store/actionTypes';\n\nfunction* updatePointPosition(action) {\n  const {\n    id,\n    geocodeFn,\n    coordinates,\n  } = action;\n\n  try {\n    const response = yield call(() => geocodeFn(coordinates));\n    const geoData = formatReverseGeocodeResponse(response, coordinates);\n    yield put(updatePointPositionSuccess(geoData, id));\n  } catch(e) {\n    yield put(updatePointPositionFail());\n  }\n};\n\nfunction* fetchAddressList(action) {\n  const {\n    value,\n    geocodeFn,\n  } = action;\n\n  try {\n    const response = yield call(() => geocodeFn(value));\n    const geoData = formatGeocodeResponse(response);\n    yield put(fetchAddressListSuccess(geoData));\n  } catch(e) {\n    yield put(fetchAddressListFail());\n  }\n};\n\nfunction* watchAddressListFetch() {\n  yield takeEvery(actionTypes.ADDRESS_LIST_FETCH, fetchAddressList);\n};\n\nfunction* watchPointPositionUpdate() {\n  yield takeEvery(actionTypes.POINT_POSITION_CHANGE, updatePointPosition)\n};\n\nexport default function* rootSaga() {\n  yield all([\n    watchAddressListFetch(),\n    watchPointPositionUpdate(),\n  ]);\n};\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { loadState, saveState } from 'store/localStorage';\nimport createSagaMiddleware from 'redux-saga';\nimport reducers from 'store/reducers';\nimport sagas from 'store/sagas';\n\nconst STORAGE_NAMESPACE = 'map-routes';\n\nconst persistedState = loadState(STORAGE_NAMESPACE);\nconst composeEnchancers = composeWithDevTools({});\nconst sagaMiddleware = createSagaMiddleware();\n\nconst storeEnchancers = composeEnchancers(applyMiddleware(sagaMiddleware));\n\nconst store = createStore(\n  reducers, \n  persistedState, \n  storeEnchancers,\n);\n\nsagaMiddleware.run(sagas);\n\nstore.subscribe(() => {\n  saveState(STORAGE_NAMESPACE, store.getState());\n});\n\nexport default store;\n","export const loadState = namespace => {\n  try {\n    const serializedState = localStorage.getItem(namespace);\n    if (serializedState === null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch (err) {\n    return undefined;\n  }\n}; \n\nexport const saveState = (namespace, state) => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem(namespace, serializedState);\n  } catch {\n    // ignore write errors\n  }\n};\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { pointShape } from 'store/reducers/points';\nimport { \n  Map as YMap,\n  Placemark,\n  Polyline,\n  withYMaps,\n} from 'react-yandex-maps';\n\nimport { updatePointPosition } from 'store/actionCreators';\n\nimport {\n  isPointAdded,\n  getLastPointCoordinates,\n} from 'helpers';\n\nconst mapConfig = {\n  center: [55.75, 37.57], \n  zoom: 9,\n  controls: [],\n  points: {},\n};\n\nclass Map extends React.Component {\n  static propTypes = {\n    pointsById: PropTypes.shape(pointShape),\n    ids: PropTypes.arrayOf(PropTypes.number),\n    onMapLoad: PropTypes.func.isRequired,\n    updatePointPosition: PropTypes.func.isRequired,\n    // eslint-disable-next-line\n    ymaps: PropTypes.object,\n  }\n\n  static defaultProps = { \n    pointsById: {},\n    ids: [],\n  }\n  \n  state = {\n    ...mapConfig,\n    orderedPoints: [],\n    ids: [],\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const {\n      ids, pointsById, \n    } = nextProps;\n    const orderedPoints = [];\n    \n    ids.forEach(id => {\n      orderedPoints.push(pointsById[id]);\n    });\n\n    const newState = {\n      orderedPoints,\n      ids,\n    };\n\n    if (isPointAdded(prevState.ids, nextProps.ids)) {\n      newState.center = getLastPointCoordinates(orderedPoints);\n    }\n\n    return newState;\n  }\n  \n  onDragEnd = async (e, id) => {\n    const {\n      updatePointPosition,\n      ymaps,\n    } = this.props;\n    // eslint-disable-next-line\n    const coordinates = e.originalEvent.target.geometry._coordinates;\n\n    updatePointPosition(id, ymaps.geocode, coordinates);\n  }\n\n  getPolylineGeometry() {\n    const { orderedPoints } = this.state;\n    \n    return orderedPoints.map(point => (\n      [\n        point.lng,\n        point.lat,\n      ]\n    ));\n  }\n\n  renderPlacemark(point, index) {\n    const coordinates = [\n      parseFloat(point.lng),\n      parseFloat(point.lat),\n    ];\n\n    const placeMark = {\n      geometry: {\n        type: \"Point\",\n        coordinates,\n      },\n      properties: {\n        iconContent: index + 1,\n        hintContent: point.name,\n        balloonContentHeader: point.name,\n        balloonContentBody: point.description,\n      },\n      options: {\n        preset: 'twirl#redDotIcon',\n        draggable: true,\n        hintHideTimeout: 0,\n      },\n      modules: ['geoObject.addon.balloon', 'geoObject.addon.hint'],\n    };\n    \n    return (\n      <Placemark\n        key={point.id}\n        onDragEnd={(e) => this.onDragEnd(e, point.id)}\n        {...placeMark}\n      />\n    );\n  }\n  \n  render() {\n    const { onMapLoad } = this.props;\n\n    const { orderedPoints } = this.state;\n\n    return (\n      <YMap\n        state={this.state}\n        defaultState={this.state}\n        width=\"100%\"\n        height=\"100%\"\n        onLoad={onMapLoad}\n        onError={(error) => console.log(error)}\n      >\n        {orderedPoints.map((point, index) => (\n          this.renderPlacemark(point, index)\n        ))}\n        <Polyline geometry={this.getPolylineGeometry(orderedPoints)} />\n      </YMap>\n    );\n  }\n};\n\nconst mapStateToProps = (state) => ({\n  pointsById: state.points.byId,\n  ids: state.points.ids,\n});\n\nconst mapActionCreators = { updatePointPosition };\n\nexport default connect(mapStateToProps, mapActionCreators)(withYMaps(Map));","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  fill: \"none\",\n  fillRule: \"evenodd\",\n  transform: \"translate(1 1)\",\n  strokeWidth: 2\n}, React.createElement(\"circle\", {\n  cx: 22,\n  cy: 22,\n  r: 6.38895,\n  strokeOpacity: 0\n}, React.createElement(\"animate\", {\n  attributeName: \"r\",\n  begin: \"1.5s\",\n  dur: \"3s\",\n  values: \"6;22\",\n  calcMode: \"linear\",\n  repeatCount: \"indefinite\"\n}), React.createElement(\"animate\", {\n  attributeName: \"stroke-opacity\",\n  begin: \"1.5s\",\n  dur: \"3s\",\n  values: \"1;0\",\n  calcMode: \"linear\",\n  repeatCount: \"indefinite\"\n}), React.createElement(\"animate\", {\n  attributeName: \"stroke-width\",\n  begin: \"1.5s\",\n  dur: \"3s\",\n  values: \"2;0\",\n  calcMode: \"linear\",\n  repeatCount: \"indefinite\"\n})), React.createElement(\"circle\", {\n  cx: 22,\n  cy: 22,\n  r: 14.389,\n  strokeOpacity: 0\n}, React.createElement(\"animate\", {\n  attributeName: \"r\",\n  begin: \"3s\",\n  dur: \"3s\",\n  values: \"6;22\",\n  calcMode: \"linear\",\n  repeatCount: \"indefinite\"\n}), React.createElement(\"animate\", {\n  attributeName: \"stroke-opacity\",\n  begin: \"3s\",\n  dur: \"3s\",\n  values: \"1;0\",\n  calcMode: \"linear\",\n  repeatCount: \"indefinite\"\n}), React.createElement(\"animate\", {\n  attributeName: \"stroke-width\",\n  begin: \"3s\",\n  dur: \"3s\",\n  values: \"2;0\",\n  calcMode: \"linear\",\n  repeatCount: \"indefinite\"\n})), React.createElement(\"circle\", {\n  cx: 22,\n  cy: 22,\n  r: 4.54142\n}, React.createElement(\"animate\", {\n  attributeName: \"r\",\n  begin: \"0s\",\n  dur: \"1.5s\",\n  values: \"6;1;2;3;4;5;6\",\n  calcMode: \"linear\",\n  repeatCount: \"indefinite\"\n})));\n\nvar SvgSpinner = function SvgSpinner(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    width: 45,\n    height: 45,\n    viewBox: \"0 0 45 45\",\n    stroke: \"#000\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgSpinner, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/spinner.4388d025.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components';\n\nconst regularSide = '20px';\nconst largeSide = '100px';\n\nexport const SpinnerIcon = styled.i`\n  display: block;\n  width: ${(props) => props.large ? largeSide : regularSide};\n  height: ${(props) => props.large ? largeSide : regularSide};\n\n  svg {\n    stroke: ${(props) => props.color};\n    width: 100%;\n    height: 100%;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ReactComponent as IconSVG } from 'assets/svg/spinner.svg';\n\nimport { SpinnerIcon } from './Spinner.styled';\n\nconst Spinner = ({ \n  large,\n  color,\n}) => (\n  <SpinnerIcon\n    large={large}\n    color={color}\n    alt=\"spinner\"\n  >\n    <IconSVG />\n  </SpinnerIcon>\n);\n\nSpinner.propTypes = {\n  large: PropTypes.bool,\n  color: PropTypes.string,\n};\n\nSpinner.defaultProps = {\n  large: false,\n  color: 'dodgerblue',\n};\n\nexport default Spinner;","import styled from 'styled-components';\n\nexport const AddressInputBlock = styled.div`\n  background-color: #fff;\n  border-radius: 8px;\n  padding: 5px 10px;\n  border: 1px solid #e4e4e4;\n  width: 392px;\n  display: flex;\n  flex-direction: row;\n  z-index: 3;\n  position: relative;\n  box-shadow: none;\n  transition: ease 0.3s box-shadow;\n  align-items: center;\n\n  @media screen and (max-width: 448px) {\n    width: 100%;\n    border-radius: 0;\n  }\n\n  > div {\n    flex-grow: 1;\n  }\n`;\n\nexport const Input = styled.input`\n  font-size: 16px;\n  font-family: 'Roboto Slab', serif;\n  border-radius: 3px;\n  border: none;\n  height: 24px;\n  outline: none;\n  width: 100%;\n  box-sizing: border-box;\n`;\n\nexport const EnterButtonIcon = styled.span`\n  position: relative;\n  display: block;\n  border-radius: 3px;\n  border: 1px solid #ccc;\n  background-color: #fefefe;\n  width: 25px;\n  height: 20px;\n\n  &:before,\n  &:after {\n    content: '';\n    position: absolute;\n  }\n\n  &:before {\n    border-top: 3px solid transparent;\n    border-bottom: 3px solid transparent;\n    border-right: 3px solid #555;\n    left: 6px;\n    top: 9px;\n    position: absolute;\n  }\n\n  &:after {\n    width: 8px;\n    height: 8px;\n    border-right: 1px solid #555;\n    border-bottom: 1px solid #555;\n    top: 4px;\n    left: 9px;\n    border-bottom-right-radius: 2px;\n  }\n`;\n\nexport default {\n  AddressInputBlock,\n  Input,\n  EnterButtonIcon, \n};  ","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withYMaps } from 'react-yandex-maps';\nimport debounce from 'lodash/debounce';\nimport OutsideClickHandler from 'react-outside-click-handler';\n\nimport Spinner from '../Spinner';\n\nimport {\n  AddressInputBlock,\n  Input,\n  EnterButtonIcon,\n} from './AddressInput.styled';\n\nclass AddressInput extends Component {\n  static propTypes = {\n    onClickOutside: PropTypes.func.isRequired,\n    fetchAddressList: PropTypes.func.isRequired,\n    isAddressFetching: PropTypes.bool.isRequired,\n    isAddressListVisible: PropTypes.bool.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n    // eslint-disable-next-line\n    ymaps: PropTypes.object.isRequired,\n  }\n\n  state = { value: '' }\n  \n  constructor(props) {\n    super(props);\n    this.debouncedFetchAddressList = debounce(this.fetchAddressList, 500);\n  }\n\n  fetchAddressList = async value => {\n    const {\n      fetchAddressList, \n      ymaps,\n    } = this.props;\n\n    fetchAddressList(value, ymaps.geocode);\n  }\n\n  handleInputChange = e => {\n    e.persist();\n    const { value } = e.target;\n\n    this.setState({ value });\n    this.debouncedFetchAddressList(value);\n  }\n\n  handleKeyDown = e => {\n    const { onSubmit } = this.props;\n\n    if (e.keyCode === 13) {\n      onSubmit();\n      this.clearInputValue();\n    }\n  }\n\n  clearInputValue() {\n    this.setState({ value: '' });\n  }\n\n  render() {\n    const {\n      onClickOutside,\n      isAddressFetching,\n      isAddressListVisible,\n    } = this.props;\n\n    const { value } = this.state;\n\n    const {\n      handleKeyDown,\n      handleInputChange,\n    } = this;\n\n    const isEnterIconVisible = !isAddressFetching && isAddressListVisible;\n\n    return (\n      <AddressInputBlock>\n        <OutsideClickHandler onOutsideClick={onClickOutside}>\n          <Input\n            data-e2e-id=\"address-input\"\n            type=\"text\"\n            placeholder=\"Search...\"\n            onChange={handleInputChange}\n            onKeyDown={handleKeyDown}\n            value={value}\n          />\n        </OutsideClickHandler>\n        {isAddressFetching && <Spinner />}\n        {isEnterIconVisible && <EnterButtonIcon />}\n      </AddressInputBlock>\n    );\n  }\n}\n\nexport default withYMaps(AddressInput);\n","import { darken } from 'polished';\n\nexport default () => `\n  border-radius: 3px;\n  border: none;\n  height: 24px;\n  width: 24px;\n  outline: none;\n  transition: ease .3s background-color;\n  background-color: #fff;\n  padding: 0;\n\n  &:hover {\n    background-color: ${darken(0.05, '#fff')};\n    cursor: pointer;\n  }\n`;\n","import styled from 'styled-components';\nimport button from 'styles/styled-mixins/button';\n\nexport const AddressItemBlock = styled.li`\n  display: flex;\n  padding: 4px;\n`;\n\nexport const ItemName = styled.span`\n  flex-grow: 2;\n  cursor: default;\n  padding-left: 5px;\n`;\n\nexport const AddButton = styled.button`\n ${button}\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { generateAddressId } from 'helpers';\n\nimport {\n  AddressItemBlock,\n  ItemName,\n  AddButton,\n} from './AddressItem.styled';\n\nconst AddressItem = ({\n address, handleAddClick, \n}) => {\n  return (\n    <AddressItemBlock\n      data-e2e-id=\"address-item\"\n    >\n      <ItemName>\n        {address.name}\n      </ItemName>\n      <AddButton\n        onClick={() => handleAddClick(address, generateAddressId())}\n      >\n        <i className=\"icofont-plus\" />\n      </AddButton>\n    </AddressItemBlock>\n  );\n}\n\nAddressItem.propTypes = {\n  address: PropTypes.shape({\n    description: PropTypes.string,\n    lat: PropTypes.string.isRequired,\n    lng: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n  }),\n  handleAddClick: PropTypes.func.isRequired,\n};\n\nAddressItem.defaultProps = { address: {} };\n \nexport default AddressItem;","import styled from 'styled-components';\n\nexport const AddressListContainer = styled.ul`\n  margin: 0 10px;\n  background-color: #fff;\n  border-bottom-left-radius: 4px;\n  border-bottom-right-radius: 4px;\n  border: 1px solid #e4e4e4;\n  position: relative;\n  padding-top: 10px;\n  top: -10px;\n  z-index: 2;\n  max-height: 300px;\n  overflow: auto;\n  display: ${(props) => props.isVisible ? 'block' : 'none'};\n`;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { addressShape } from 'store/reducers/addresses';\nimport PropTypes from 'prop-types';\nimport AddressItem from '../AddressItem';\n\nimport { AddressListContainer } from './AddressList.styled';\n\nconst AddressList = ({ \n  addresses, \n  isVisible, \n  addPoint,\n}) => {\n  return (\n    <AddressListContainer isVisible={isVisible}>\n      {addresses.map((address, index) => (\n        <AddressItem\n          address={address}\n          key={`address-${index}`}\n          handleAddClick={addPoint}\n        />\n      ))}\n    </AddressListContainer>\n  );\n};\n\nAddressList.propTypes = {\n  addresses: PropTypes.arrayOf(PropTypes.shape(addressShape)).isRequired,\n  isVisible: PropTypes.bool.isRequired,\n  addPoint: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({ addresses: state.addresses.list });\n \nexport default connect(mapStateToProps, null)(AddressList);","import styled from 'styled-components';\n\nexport const AddressBlock = styled.div`\n  z-index: 2;\n  position: fixed;\n  top: 20px;\n  left: 20px;\n\n  @media screen and (max-width: 448px) {\n    top: 0;\n    left: 0;\n    width: 100%;\n  }\n`;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addressShape } from 'store/reducers/addresses';\nimport {\n  fetchAddressList,\n  addPoint,\n} from 'store/actionCreators';\n\nimport {\n  generateAddressId,\n} from 'helpers';\n\nimport AddressInput from '../AddressInput';\nimport AddressList from '../AddressList';\n\nimport { AddressBlock } from './Address.styled';\n\nexport class Address extends Component {\n\n  state = { isAddressListVisible: false }\n\n  static propTypes = {\n    addresses: PropTypes.arrayOf(PropTypes.shape(addressShape)).isRequired,\n    fetchAddressList: PropTypes.func.isRequired,\n    addPoint: PropTypes.func.isRequired,\n    isAddressFetching: PropTypes.bool.isRequired,\n  }\n\n  componentDidUpdate(prevProps) {\n    const { addresses } = this.props;\n    \n    if (addresses.length && !prevProps.addresses.length) {\n      this.showAddressList()\n    }\n  }\n\n  onClickOutside = () => {\n    this.hideAddressList();\n  }\n\n  onAddressInputSubmit = () => {\n    const {\n      addresses,\n      addPoint, \n    } = this.props;\n\n    if (!addresses.length) return;\n\n    addPoint(addresses[0], generateAddressId());\n    this.hideAddressList();\n  }\n\n  showAddressList() {\n    this.setState({ isAddressListVisible: true });\n  }\n\n  hideAddressList() {\n    this.setState({ isAddressListVisible: false });\n  }\n\n  render() {\n    const {\n      onClickOutside,\n      onAddressInputSubmit,\n    } = this;\n\n    const {\n      fetchAddressList,\n      addPoint,\n      addresses,\n      isAddressFetching,\n    } = this.props;\n\n    const { isAddressListVisible } = this.state;\n\n    return ( \n      <AddressBlock>\n        <AddressInput\n          fetchAddressList={fetchAddressList}\n          onClickOutside={onClickOutside}\n          isAddressFetching={isAddressFetching}\n          onSubmit={onAddressInputSubmit}\n          isAddressListVisible={isAddressListVisible}\n        /> \n        <AddressList \n          addresses={addresses}\n          isVisible={isAddressListVisible}\n          addPoint={addPoint} \n        /> \n      </AddressBlock>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  addresses: state.addresses.list,\n  isAddressFetching: state.addresses.isFetching,\n});\n\nconst mapActionCreators = {\n  fetchAddressList,\n  addPoint,\n};\n\nexport default connect(mapStateToProps, mapActionCreators)(Address);","import styled from 'styled-components';\nimport button from 'styles/styled-mixins/button';\n\nexport const PointContainer = styled.div`\n  padding: 5px;\n  display: flex;\n  flex-direction: row;  \n  align-items: center;\n  margin-bottom: 4px;\n  position: relative;\n`;\n\nexport const DragHandle = styled.div`\n  position: relative;\n  top: 1px;\n`;\n\nexport const PointName = styled.span`\n  flex-grow: 2;\n  padding: 5px;\n  cursor: default;\n`;\n\nexport const RemoveButton = styled.button`\n  ${button};\n`;\n\nexport const ButtonIcon = styled.i`\n  font-size: 15px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { pointShape } from 'store/reducers/points';\n\nimport Spinner from '../Spinner';\n\nimport {\n  PointContainer,\n  DragHandle,\n  PointName,\n  RemoveButton,\n  ButtonIcon,\n} from './Point.styled';\n\nconst Point = ({\n  point,\n  onPointRemove,\n  provided,\n}) => {\n  return (\n    <PointContainer>\n      <DragHandle\n        {...provided.dragHandleProps}\n      >\n        <i className=\"icofont-navigation-menu\" />\n      </DragHandle>\n      <PointName>\n        {point.name}\n      </PointName>\n      {point.isSaving ? (\n        <Spinner />\n      ) : (\n        <RemoveButton\n          onClick={() => onPointRemove(point.id)}\n        >\n          <ButtonIcon className=\"icofont-bin\" />\n        </RemoveButton>\n      )}\n    </PointContainer>\n  );\n}\n\nPoint.propTypes = {\n  point: PropTypes.shape(pointShape),\n  onPointRemove: PropTypes.func.isRequired,\n  // eslint-disable-next-line\n  provided: PropTypes.object.isRequired,\n};\n\nPoint.defaultProps = { point: {} };\n \nexport default Point;","import styled from 'styled-components';\n\nexport const PointsListContainer = styled.div`\n  min-height: 30px;\n  max-height: 400px;\n  background-color: #fff;\n  border-radius: 8px;\n  border: 1px solid #e4e4e4;\n  z-index: 1;\n  min-width: 200px;\n  padding-right: 5px;\n\n  @media screen and (max-width: 448px) {\n    width: 100%;\n    padding-right: 0;\n    max-height: 250px;\n    overflow: auto;\n  }\n`;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { pointShape } from 'store/reducers/points';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\nimport { removePoint, changePointOrder } from 'store/actionCreators';\nimport Point from '../Point';\n\n\nimport { PointsListContainer } from './PointsList.styled';\n\nclass PointsList extends Component {\n  static propTypes = {\n    pointsById: PropTypes.shape(pointShape).isRequired,\n    ids: PropTypes.arrayOf(PropTypes.number).isRequired,\n    removePoint: PropTypes.func.isRequired,\n    changePointOrder: PropTypes.func.isRequired,\n  }\n    \n  onDragEnd = (result) => {\n    if (result.reason !== \"DROP\") return;\n\n    const { changePointOrder } = this.props;\n\n    changePointOrder({\n      oldIndex: result.source.index,\n      newIndex: result.destination.index,\n      addressId: result.draggableId,\n    });\n  }\n\n  render() {\n    const { onDragEnd } = this;\n    \n    const {\n      pointsById,\n      ids,\n      removePoint,\n    } = this.props;\n\n    if (!ids.length) {\n      return null;\n    }\n\n    return (\n      <DragDropContext\n        onDragEnd={onDragEnd}\n      >\n        <Droppable droppableId=\"points-droppable\">\n          {provided => (\n            <PointsListContainer\n              ref={provided.innerRef}\n              {...provided.droppableProps}\n            >\n              {ids.map((id, index) => (\n                <Draggable\n                  key={id}\n                  draggableId={id}\n                  index={index}\n                >\n                  {provided => (\n                    <div \n                      ref={provided.innerRef} \n                      {...provided.draggableProps}\n                    >\n                      <Point\n                        point={pointsById[id]}\n                        onPointRemove={removePoint}\n                        provided={provided}\n                      />\n                    </div>\n                  )}\n                </Draggable>\n              ))}\n              {provided.placeholder}\n              {/* <button className=\"points-list__hide-button\"></button> */}\n            </PointsListContainer>\n          )}\n        </Droppable>  \n      </DragDropContext>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  ids: state.points.ids,\n  pointsById: state.points.byId,\n});\n\nconst mapActionCreators = {\n  removePoint,\n  changePointOrder,\n};\n \nexport default connect(mapStateToProps, mapActionCreators)(PointsList);","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  height: 100vh;\n`;\n\nexport const PointsListWrapper = styled.div`\n  position: fixed;\n  z-index: 1;\n  left: 0;\n  top: 0;\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  padding-left: 20px;\n  width: 0;\n\n  @media screen and (max-width: 448px) {\n    top: auto;\n    bottom: 0;\n    height: auto;\n    display: block;\n    width: 100%;\n    padding-left: 0;\n  }\n`;\n\nexport const LoadingOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: #fff;\n  z-index: 5;\n`;","import React, { Component } from 'react';\nimport store from 'store';\nimport { Provider } from 'react-redux';\nimport { YMaps } from 'react-yandex-maps';\n\nimport Map from '../Map';\nimport Address from '../Address';\nimport PointsList from '../PointsList';\nimport Spinner from '../Spinner';\n\nimport { Wrapper, PointsListWrapper, LoadingOverlay } from './App.styled';\n\nconst YMAPS_API_KEY = '7547cd62-6ddd-4fe8-bbef-55ea5c7e70bf';\n\nclass App extends Component {\n  state = { isMapLoaded: false };\n\n  handleMapLoad = () => {\n    this.setState({ isMapLoaded: true });\n  };\n\n  render() {\n    const { isMapLoaded } = this.state;\n\n    return (\n      <>\n        {!isMapLoaded && (\n          <LoadingOverlay>\n            <Spinner large />\n          </LoadingOverlay>\n        )}\n        <Provider store={store}>\n          <YMaps\n            query={{\n              ns: 'use-load-option',\n              apikey: YMAPS_API_KEY,\n              load: 'geocode',\n            }}\n          >\n            <Wrapper>\n              <Map onMapLoad={this.handleMapLoad} />\n              {isMapLoaded && <Address />}\n              <PointsListWrapper>\n                <PointsList />\n              </PointsListWrapper>\n            </Wrapper>\n          </YMaps>\n        </Provider>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\n/* eslint-disable */\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n/* eslint-enable */\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'styles/normalize.css';\nimport 'styles/reset.css';\nimport 'styles/icofont/icofont.min.css';\nimport 'styles/general.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}