{"version":3,"sources":["store/reducers/addresses.js","store/actionTypes.js","helpers/index.js","store/reducers/points.js","store/reducers/index.js","store/index.js","store/localStorage.js","components/Map/index.js","store/actionCreators.js","assets/svg/spinner.svg","components/Spinner/Spinner.styled.js","components/Spinner/index.js","components/AddressInput/AddressInput.styled.js","components/AddressInput/index.js","styles/styled-mixins/button.js","components/AddressItem/AddressItem.styled.js","components/AddressItem/index.js","components/AddressList/AddressList.styled.js","components/AddressList/index.js","components/Address/Address.styled.js","components/Address/index.js","components/Point/Point.styled.js","components/Point/index.js","components/PointsList/PointsList.styled.js","components/PointsList/index.js","components/App/App.styled.js","components/App/index.js","serviceWorker.js","index.js"],"names":["addressesReducer","handleActions","_handleActions","Object","defineProperty","state","objectSpread","isFetching","list","action","toConsumableArray","addressList","PropTypes","string","generateAddressId","Date","getUTCMilliseconds","formatGeocoderResponse","geoObjects","toArray","map","geoObject","_geoObject$geometry$g","geometry","getCoordinates","value","toString","_geoObject$geometry$g2","slicedToArray","lng","lat","name","properties","get","description","pointsReducer","points_handleActions","nextState","cloneDeep","byId","newId","id","values","filter","point","address","length","isSaving","ids","concat","splice","indexOf","oldIndex","newIndex","reorderedIds","arr","console","log","arrCopy","element","leftArr","slice","rightArr","moveElement","data","number","bool","combineReducers","addresses","points","persistedState","namespace","serializedState","localStorage","getItem","JSON","parse","err","loadState","composeEnchancers","composeWithDevTools","store","createStore","reducers","subscribe","stringify","setItem","_unused","saveState","getState","mapConfig","center","zoom","controls","Map","orderedPoints","onDragEnd","_callee","e","_this$props","updatePointPosition","updatePointPositionSuccess","ymaps","_e$originalEvent$targ","result","addressArr","geoObjectName","regenerator_default","a","wrap","_context","prev","next","_this","props","originalEvent","target","_coordinates","geocode","sent","split","stop","this","index","_this2","placeMark","type","coordinates","parseFloat","iconContent","hintContent","balloonContentHeader","balloonContentBody","options","preset","draggable","hintHideTimeout","modules","react_default","createElement","react_yandex_maps_esm","assign","key","_this3","onMapLoad","defaultState","width","height","onLoad","onError","error","renderPlacemark","getPolylineGeometry","nextProps","prevState","pointsById","forEach","push","prevIds","newState","lastPoint","getLastPointCoordinates","React","Component","defaultProps","mapActionCreators","connect","withYMaps","_extends","i","arguments","source","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","fill","fillRule","transform","strokeWidth","cx","cy","r","strokeOpacity","attributeName","begin","dur","calcMode","repeatCount","spinner_SvgSpinner","_ref","svgRef","viewBox","stroke","ref","ForwardRef","forwardRef","__webpack_require__","p","SpinnerIcon","styled","withConfig","displayName","componentId","large","color","Spinner","alt","AddressInputBlock","div","Input","input","EnterButtonIcon","span","AddressInput","classCallCheck","possibleConstructorReturn","getPrototypeOf","fetchAddressList","asyncToGenerator","mark","fetchAddressListSuccess","formattedData","_x","handleInputChange","persist","setState","debouncedFetchAddressList","handleKeyDown","onSubmit","keyCode","clearInputValue","debounce","_this$props2","onClickOutside","isAddressFetching","isAddressListVisible","isEnterIconVisible","react_outside_click_handler_default","onOutsideClick","data-e2e-id","placeholder","onChange","onKeyDown","components_Spinner","styled_mixins_button","darken","AddressItemBlock","li","ItemName","AddButton","button","AddressItem","handleAddClick","onClick","className","AddressListContainer","ul","isVisible","addPoint","components_AddressItem","AddressBlock","Address","_Component","_getPrototypeOf2","_len","args","Array","_key","hideAddressList","onAddressInputSubmit","inherits","createClass","prevProps","showAddressList","components_AddressInput","components_AddressList","PointContainer","DragHandle","PointName","RemoveButton","ButtonIcon","Point","onPointRemove","provided","dragHandleProps","PointsListContainer","PointsList","reason","changePointOrder","destination","addressId","draggableId","removePoint","react_beautiful_dnd_esm","droppableId","innerRef","droppableProps","draggableProps","components_Point","dropData","Wrapper","PointsListWrapper","LoadingOverlay","App","isMapLoaded","handleMapLoad","Fragment","es","query","ns","apikey","load","components_Map","components_Address","components_PointsList","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c997f15f.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport { handleActions } from 'redux-actions';\n\nimport * as actionTypes from '../actionTypes';\n\nexport const initialAddressesState = {\n  list: [],\n  isFetching: false,\n};\n\nconst addressesReducer = handleActions({\n  [actionTypes.ADDRESS_LIST_FETCH]: state => ({\n    ...state,\n    isFetching: true,\n    list: [],\n  }),\n\n  [actionTypes.ADDRESS_LIST_FETCH_SUCCESS]: (state, action) => ({\n    ...state,\n    list: [...action.addressList],\n    isFetching: false,\n  }),\n\n  [actionTypes.ADDRESS_LIST_FETCH_FAIL]: state => ({\n    ...state,\n    isFetching: false,\n  }),\n}, initialAddressesState);\n\nexport const addressShape = {\n  lat: PropTypes.string,\n  lng: PropTypes.string,\n  name: PropTypes.string,\n  description: PropTypes.string,\n};\n\nexport default addressesReducer;","export const ADDRESS_LIST_FETCH = 'ADDRESS_LIST_FETCH';\nexport const ADDRESS_LIST_FETCH_SUCCESS = 'ADDRESS_LIST_FETCH_SUCCESS';\nexport const ADDRESS_LIST_FETCH_FAIL = 'ADDRESS_LIST_FETCH_FAIL';\n\nexport const POINT_ADD = 'POINT_ADD';\nexport const POINT_REMOVE = 'POINT_REMOVE';\nexport const POINT_ORDER_CHANGE = 'POINT_ORDER_CHANGE';\nexport const POINT_POSITION_CHANGE = 'POINT_POSITION_CHANGE';\nexport const POINT_POSITION_CHANGE_SUCCESS = 'POINT_POSITION_CHANGE_SUCCESS';\n","export const moveElement = (arr, oldIndex, newIndex) => {\n  if (oldIndex > arr.length - 1 || newIndex > arr.length - 1) {\n    console.log(\"Position exceeds array length\");\n    return arr;\n  }\n\n  const arrCopy = [...arr];\n\n  const element = arrCopy.splice(oldIndex, 1);\n  const leftArr = arrCopy.slice(0, newIndex);\n  const rightArr = arrCopy.slice(newIndex);\n\n  return [...leftArr, ...element, ...rightArr];\n}\n\nexport const generateAddressId = () =>\n  new Date().getUTCMilliseconds()\n\nexport const isPointAdded = (prevIds, nextIds) => {\n  return nextIds.length > prevIds.length;\n};\n\nexport const getLastPointCoordinates = (orderedPoints) => {\n  const lastPoint = orderedPoints[orderedPoints.length - 1];\n\n  return [\n    lastPoint.lng,\n    lastPoint.lat,\n  ];\n};\n\nexport const formatGeocoderResponse = (geoObjects) => {\n  const geoObjectsArr = geoObjects.toArray();\n\n  const formattedData = geoObjectsArr.map((geoObject) => {\n    const [lng, lat] = \n      geoObject.geometry\n        .getCoordinates()\n        .map(value => value.toString());\n      \n    const name = geoObject.properties.get('name');\n    const description = geoObject.properties.get('text');\n\n    return {\n      lat,\n      lng,\n      name,\n      description,\n    };\n  });\n  \n  return formattedData;\n};","import PropTypes from 'prop-types';\nimport { handleActions } from 'redux-actions';\nimport { moveElement } from 'helpers';\n\nimport cloneDeep from 'lodash/cloneDeep';\nimport * as actionTypes from '../actionTypes';\n\nexport const initialPointsState = {\n  byId: {},\n  ids: [],\n};\n\nconst pointsReducer = handleActions({\n  [actionTypes.POINT_ADD]: (state, action) => {\n    const nextState = cloneDeep(state);\n    const { byId } = nextState;\n    const newId = action.id;\n\n    const presentPoint = Object.values(byId).filter(point =>\n      point.lat === action.address.lat &&\n      point.lng === action.address.lng,\n    );\n\n    if (presentPoint.length) {\n      return { ...nextState };\n    }\n    \n    return {\n      ...nextState,\n      byId: {\n        ...nextState.byId,\n        [newId]: {\n          ...action.address,\n          id: newId,\n          isSaving: false,\n        },\n      },\n      ids: [...nextState.ids, newId],\n    };\n  },\n  \n  [actionTypes.POINT_REMOVE]: (state, action) => {\n    const nextState = cloneDeep(state);\n    const {\n      byId, \n      ids,\n    } = nextState;\n    const { id } = action;\n\n    ids.splice(ids.indexOf(id), 1);\n    delete byId[id];\n\n    return {\n      ...nextState,\n      byId: { ...byId },\n      ids: [...ids],\n    };\n  },\n  \n  [actionTypes.POINT_ORDER_CHANGE]: (state, action) => {\n    const nextState = cloneDeep(state);\n    \n    const {\n      oldIndex,\n      newIndex,\n    } = action;\n\n    const { ids } = nextState;\n\n    const reorderedIds = moveElement(ids, oldIndex, newIndex)\n\n    return {\n      ...nextState,\n      ids: reorderedIds,\n    };\n  },\n\n  [actionTypes.POINT_POSITION_CHANGE]: (state, action) => {\n    const nextState = cloneDeep(state);\n    const { id } = action;\n    \n    return {\n      ...nextState,\n      byId: {\n        ...nextState.byId,\n        [id]: {\n          ...nextState.byId[id],\n          isSaving: true,\n        },\n      },\n    };\n  },\n  \n  [actionTypes.POINT_POSITION_CHANGE_SUCCESS]: (state, action) => {\n    const nextState = cloneDeep(state);\n    \n    const {\n      data,\n      id,\n    } = action;\n    \n    const { byId } = nextState;\n\n    const point = { ...data };\n\n    point.id = id;\n    point.lng = point.lng.toString();\n    point.lat = point.lat.toString();\n\n    return {\n      ...nextState,\n      byId: {\n        ...byId,\n        [id]: {\n          ...point,\n          isSaving: false,\n        },\n      },\n    }\n  },\n}, initialPointsState);\n\nexport const pointShape = {\n  id: PropTypes.number,\n  name: PropTypes.string,\n  description: PropTypes.string,\n  lat: PropTypes.string,\n  lng: PropTypes.string,\n  isSaving: PropTypes.bool,\n};\n\nexport default pointsReducer;","import { combineReducers } from 'redux';\n\nimport addresses from './addresses';\nimport points from './points';\n\nexport default combineReducers({\n  addresses,\n  points,\n});","import { createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { loadState, saveState } from 'store/localStorage';\n\nimport reducers from './reducers';\n\nconst STORAGE_NAMESPACE = 'map-routes';\n\nconst persistedState = loadState(STORAGE_NAMESPACE);\nconst composeEnchancers = composeWithDevTools({});\n\nconst store = createStore(reducers, persistedState, composeEnchancers());\n\nstore.subscribe(() => {\n  saveState(STORAGE_NAMESPACE, store.getState());\n});\n\nexport default store;\n","export const loadState = namespace => {\n  try {\n    const serializedState = localStorage.getItem(namespace);\n    if (serializedState === null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch (err) {\n    return undefined;\n  }\n}; \n\nexport const saveState = (namespace, state) => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem(namespace, serializedState);\n  } catch {\n    // ignore write errors\n  }\n};\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { pointShape } from 'store/reducers/points';\nimport { \n  Map as YMap,\n  Placemark,\n  Polyline,\n  withYMaps,\n} from 'react-yandex-maps';\n\nimport { \n  updatePointPosition,\n  updatePointPositionSuccess,\n} from 'store/actionCreators';\n\nimport {\n  isPointAdded,\n  getLastPointCoordinates,\n} from 'helpers';\n\nconst mapConfig = {\n  center: [55.75, 37.57], \n  zoom: 9,\n  controls: [],\n  points: {},\n};\n\nclass Map extends React.Component {\n  static propTypes = {\n    pointsById: PropTypes.shape(pointShape),\n    ids: PropTypes.arrayOf(PropTypes.number),\n    onMapLoad: PropTypes.func.isRequired,\n    updatePointPosition: PropTypes.func.isRequired,\n    updatePointPositionSuccess: PropTypes.func.isRequired,\n    // eslint-disable-next-line\n    ymaps: PropTypes.object,\n  }\n\n  static defaultProps = { \n    pointsById: {},\n    ids: [],\n  }\n  \n  state = {\n    ...mapConfig,\n    orderedPoints: [],\n    ids: [],\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const {\n      ids, pointsById, \n    } = nextProps;\n    const orderedPoints = [];\n    \n    ids.forEach(id => {\n      orderedPoints.push(pointsById[id]);\n    });\n\n    const newState = {\n      orderedPoints,\n      ids,\n    };\n\n    if (isPointAdded(prevState.ids, nextProps.ids)) {\n      newState.center = getLastPointCoordinates(orderedPoints);\n    }\n\n    return newState;\n  }\n  \n  onDragEnd = async (e, id) => {\n    const {\n      updatePointPosition,\n      updatePointPositionSuccess,\n      ymaps,\n    } = this.props;\n    // eslint-disable-next-line\n    const [lng, lat] = e.originalEvent.target.geometry._coordinates;\n\n    updatePointPosition(id);\n    const result = await ymaps.geocode([lng, lat]);\n\n    const description = result.geoObjects.get(0).properties.get('text');\n    const addressArr = description.split(', ');\n    const geoObjectName = addressArr[addressArr.length - 1];\n\n    const data = {\n      lng,\n      lat,\n      name: geoObjectName,\n      description,\n    };\n\n    console.log(data);\n\n    updatePointPositionSuccess(data, id);\n  }\n\n  getPolylineGeometry() {\n    const { orderedPoints } = this.state;\n    \n    return orderedPoints.map(point => (\n      [\n        point.lng,\n        point.lat,\n      ]\n    ));\n  }\n\n  renderPlacemark(point, index) {\n    const coordinates = [\n      parseFloat(point.lng),\n      parseFloat(point.lat),\n    ];\n\n    const placeMark = {\n      geometry: {\n        type: \"Point\",\n        coordinates,\n      },\n      properties: {\n        iconContent: index + 1,\n        hintContent: point.name,\n        balloonContentHeader: point.name,\n        balloonContentBody: point.description,\n      },\n      options: {\n        preset: 'twirl#redDotIcon',\n        draggable: true,\n        hintHideTimeout: 0,\n      },\n      modules: ['geoObject.addon.balloon', 'geoObject.addon.hint'],\n    };\n    \n    return (\n      <Placemark\n        key={point.id}\n        onDragEnd={(e) => this.onDragEnd(e, point.id)}\n        {...placeMark}\n      />\n    );\n  }\n  \n  render() {\n    const { onMapLoad } = this.props;\n\n    const { orderedPoints } = this.state;\n\n    return (\n      <YMap\n        state={this.state}\n        defaultState={this.state}\n        width=\"100%\"\n        height=\"100%\"\n        onLoad={onMapLoad}\n        onError={(error) => console.log(error)}\n      >\n        {orderedPoints.map((point, index) => (\n          this.renderPlacemark(point, index)\n        ))}\n        <Polyline geometry={this.getPolylineGeometry(orderedPoints)} />\n      </YMap>\n    );\n  }\n};\n\nconst mapStateToProps = (state) => ({\n  pointsById: state.points.byId,\n  ids: state.points.ids,\n});\n\nconst mapActionCreators = { \n  updatePointPosition,\n  updatePointPositionSuccess,\n};\n\nexport default connect(mapStateToProps, mapActionCreators)(withYMaps(Map));","import * as actionTypes from './actionTypes';\n\nexport const fetchAddressList = () => ({ \n  type: actionTypes.ADDRESS_LIST_FETCH, \n});\n\nexport const fetchAddressListSuccess = (data) => ({\n  type: actionTypes.ADDRESS_LIST_FETCH_SUCCESS, \n  addressList: data,\n});\n\nexport const addPoint = (address, id) => ({\n  type: actionTypes.POINT_ADD,\n  address,\n  id,\n});\n\nexport const removePoint = (id) => ({\n  type: actionTypes.POINT_REMOVE,\n  id,\n});\n\nexport const changePointOrder = (dropData) => ({\n  type: actionTypes.POINT_ORDER_CHANGE,\n  ...dropData,\n});\n\nexport const updatePointPosition = (id) => ({\n  type: actionTypes.POINT_POSITION_CHANGE,\n  id,\n});\n\nexport const updatePointPositionSuccess = (data, id) => ({\n  type: actionTypes.POINT_POSITION_CHANGE_SUCCESS,\n  data,\n  id,\n});","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  fill: \"none\",\n  fillRule: \"evenodd\",\n  transform: \"translate(1 1)\",\n  strokeWidth: 2\n}, React.createElement(\"circle\", {\n  cx: 22,\n  cy: 22,\n  r: 6.38895,\n  strokeOpacity: 0\n}, React.createElement(\"animate\", {\n  attributeName: \"r\",\n  begin: \"1.5s\",\n  dur: \"3s\",\n  values: \"6;22\",\n  calcMode: \"linear\",\n  repeatCount: \"indefinite\"\n}), React.createElement(\"animate\", {\n  attributeName: \"stroke-opacity\",\n  begin: \"1.5s\",\n  dur: \"3s\",\n  values: \"1;0\",\n  calcMode: \"linear\",\n  repeatCount: \"indefinite\"\n}), React.createElement(\"animate\", {\n  attributeName: \"stroke-width\",\n  begin: \"1.5s\",\n  dur: \"3s\",\n  values: \"2;0\",\n  calcMode: \"linear\",\n  repeatCount: \"indefinite\"\n})), React.createElement(\"circle\", {\n  cx: 22,\n  cy: 22,\n  r: 14.389,\n  strokeOpacity: 0\n}, React.createElement(\"animate\", {\n  attributeName: \"r\",\n  begin: \"3s\",\n  dur: \"3s\",\n  values: \"6;22\",\n  calcMode: \"linear\",\n  repeatCount: \"indefinite\"\n}), React.createElement(\"animate\", {\n  attributeName: \"stroke-opacity\",\n  begin: \"3s\",\n  dur: \"3s\",\n  values: \"1;0\",\n  calcMode: \"linear\",\n  repeatCount: \"indefinite\"\n}), React.createElement(\"animate\", {\n  attributeName: \"stroke-width\",\n  begin: \"3s\",\n  dur: \"3s\",\n  values: \"2;0\",\n  calcMode: \"linear\",\n  repeatCount: \"indefinite\"\n})), React.createElement(\"circle\", {\n  cx: 22,\n  cy: 22,\n  r: 4.54142\n}, React.createElement(\"animate\", {\n  attributeName: \"r\",\n  begin: \"0s\",\n  dur: \"1.5s\",\n  values: \"6;1;2;3;4;5;6\",\n  calcMode: \"linear\",\n  repeatCount: \"indefinite\"\n})));\n\nvar SvgSpinner = function SvgSpinner(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    width: 45,\n    height: 45,\n    viewBox: \"0 0 45 45\",\n    stroke: \"#000\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgSpinner, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/spinner.4388d025.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components';\n\nconst regularSide = '20px';\nconst largeSide = '100px';\n\nexport const SpinnerIcon = styled.i`\n  display: block;\n  width: ${(props) => props.large ? largeSide : regularSide};\n  height: ${(props) => props.large ? largeSide : regularSide};\n\n  svg {\n    stroke: ${(props) => props.color};\n    width: 100%;\n    height: 100%;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ReactComponent as IconSVG } from 'assets/svg/spinner.svg';\n\nimport { SpinnerIcon } from './Spinner.styled';\n\nconst Spinner = ({ \n  large,\n  color,\n}) => (\n  <SpinnerIcon\n    large={large}\n    color={color}\n    alt=\"spinner\"\n  >\n    <IconSVG />\n  </SpinnerIcon>\n);\n\nSpinner.propTypes = {\n  large: PropTypes.bool,\n  color: PropTypes.string,\n};\n\nSpinner.defaultProps = {\n  large: false,\n  color: 'dodgerblue',\n};\n\nexport default Spinner;","import styled from 'styled-components';\n\nexport const AddressInputBlock = styled.div`\n  background-color: #fff;\n  border-radius: 8px;\n  padding: 5px 10px;\n  border: 1px solid #e4e4e4;\n  width: 392px;\n  display: flex;\n  flex-direction: row;\n  z-index: 3;\n  position: relative;\n  box-shadow: none;\n  transition: ease 0.3s box-shadow;\n  align-items: center;\n\n  @media screen and (max-width: 448px) {\n    width: 100%;\n    border-radius: 0;\n  }\n\n  > div {\n    flex-grow: 1;\n  }\n`;\n\nexport const Input = styled.input`\n  font-size: 16px;\n  font-family: 'Roboto Slab', serif;\n  border-radius: 3px;\n  border: none;\n  height: 24px;\n  outline: none;\n  width: 100%;\n  box-sizing: border-box;\n`;\n\nexport const EnterButtonIcon = styled.span`\n  position: relative;\n  display: block;\n  border-radius: 3px;\n  border: 1px solid #ccc;\n  background-color: #fefefe;\n  width: 25px;\n  height: 20px;\n\n  &:before,\n  &:after {\n    content: '';\n    position: absolute;\n  }\n\n  &:before {\n    border-top: 3px solid transparent;\n    border-bottom: 3px solid transparent;\n    border-right: 3px solid #555;\n    left: 6px;\n    top: 9px;\n    position: absolute;\n  }\n\n  &:after {\n    width: 8px;\n    height: 8px;\n    border-right: 1px solid #555;\n    border-bottom: 1px solid #555;\n    top: 4px;\n    left: 9px;\n    border-bottom-right-radius: 2px;\n  }\n`;\n\nexport default {\n  AddressInputBlock,\n  Input,\n  EnterButtonIcon, \n};  ","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withYMaps } from 'react-yandex-maps';\nimport debounce from 'lodash/debounce';\nimport OutsideClickHandler from 'react-outside-click-handler';\nimport { formatGeocoderResponse } from 'helpers';\n\nimport Spinner from '../Spinner';\n\nimport {\n  AddressInputBlock,\n  Input,\n  EnterButtonIcon,\n} from './AddressInput.styled';\n\nclass AddressInput extends Component {\n  static propTypes = {\n    onClickOutside: PropTypes.func.isRequired,\n    fetchAddressList: PropTypes.func.isRequired,\n    fetchAddressListSuccess: PropTypes.func.isRequired,\n    isAddressFetching: PropTypes.bool.isRequired,\n    isAddressListVisible: PropTypes.bool.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n  }\n\n  state = { value: '' }\n  \n  constructor(props) {\n    super(props);\n    this.debouncedFetchAddressList = debounce(this.fetchAddressList, 500);\n  }\n\n  fetchAddressList = async value => {\n    const {\n      fetchAddressList, \n      fetchAddressListSuccess, \n    } = this.props;\n    // eslint-disable-next-line\n    const { geocode } = this.props.ymaps;\n\n    fetchAddressList();\n    const result = await geocode(value);\n    const formattedData = formatGeocoderResponse(result.geoObjects);\n    fetchAddressListSuccess(formattedData);\n  }\n\n  handleInputChange = e => {\n    e.persist();\n    const { value } = e.target;\n\n    this.setState({ value });\n    this.debouncedFetchAddressList(value);\n  }\n\n  handleKeyDown = e => {\n    const { onSubmit } = this.props;\n\n    if (e.keyCode === 13) {\n      onSubmit();\n      this.clearInputValue();\n    }\n  }\n\n  clearInputValue() {\n    this.setState({ value: '' });\n  }\n\n  render() {\n    const {\n      onClickOutside,\n      isAddressFetching,\n      isAddressListVisible,\n    } = this.props;\n\n    const { value } = this.state;\n\n    const {\n      handleKeyDown,\n      handleInputChange,\n    } = this;\n\n    const isEnterIconVisible = !isAddressFetching && isAddressListVisible;\n\n    return (\n      <AddressInputBlock>\n        <OutsideClickHandler onOutsideClick={onClickOutside}>\n          <Input\n            data-e2e-id=\"address-input\"\n            type=\"text\"\n            placeholder=\"Search...\"\n            onChange={handleInputChange}\n            onKeyDown={handleKeyDown}\n            value={value}\n          />\n        </OutsideClickHandler>\n        {isAddressFetching && <Spinner />}\n        {isEnterIconVisible && <EnterButtonIcon />}\n      </AddressInputBlock>\n    );\n  }\n}\n\nexport default withYMaps(AddressInput);\n","import { darken } from 'polished';\n\nexport default () => `\n  border-radius: 3px;\n  border: none;\n  height: 24px;\n  width: 24px;\n  outline: none;\n  transition: ease .3s background-color;\n  background-color: #fff;\n  padding: 0;\n\n  &:hover {\n    background-color: ${darken(0.05, '#fff')};\n    cursor: pointer;\n  }\n`;\n","import styled from 'styled-components';\nimport button from 'styles/styled-mixins/button';\n\nexport const AddressItemBlock = styled.li`\n  display: flex;\n  padding: 4px;\n`;\n\nexport const ItemName = styled.span`\n  flex-grow: 2;\n  cursor: default;\n  padding-left: 5px;\n`;\n\nexport const AddButton = styled.button`\n ${button}\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { generateAddressId } from 'helpers';\n\nimport {\n  AddressItemBlock,\n  ItemName,\n  AddButton,\n} from './AddressItem.styled';\n\nconst AddressItem = ({\n address, handleAddClick, \n}) => {\n  return (\n    <AddressItemBlock\n      data-e2e-id=\"address-item\"\n    >\n      <ItemName>\n        {address.name}\n      </ItemName>\n      <AddButton\n        onClick={() => handleAddClick(address, generateAddressId())}\n      >\n        <i className=\"icofont-plus\" />\n      </AddButton>\n    </AddressItemBlock>\n  );\n}\n\nAddressItem.propTypes = {\n  address: PropTypes.shape({\n    description: PropTypes.string,\n    lat: PropTypes.string.isRequired,\n    lng: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n  }),\n  handleAddClick: PropTypes.func.isRequired,\n};\n\nAddressItem.defaultProps = { address: {} };\n \nexport default AddressItem;","import styled from 'styled-components';\n\nexport const AddressListContainer = styled.ul`\n  margin: 0 10px;\n  background-color: #fff;\n  border-bottom-left-radius: 4px;\n  border-bottom-right-radius: 4px;\n  border: 1px solid #e4e4e4;\n  position: relative;\n  padding-top: 10px;\n  top: -10px;\n  z-index: 2;\n  max-height: 300px;\n  overflow: auto;\n  display: ${(props) => props.isVisible ? 'block' : 'none'};\n`;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { addressShape } from 'store/reducers/addresses';\nimport PropTypes from 'prop-types';\nimport AddressItem from '../AddressItem';\n\nimport { AddressListContainer } from './AddressList.styled';\n\nconst AddressList = ({ \n  addresses, \n  isVisible, \n  addPoint,\n}) => {\n  return (\n    <AddressListContainer isVisible={isVisible}>\n      {addresses.map((address, index) => (\n        <AddressItem\n          address={address}\n          key={`address-${index}`}\n          handleAddClick={addPoint}\n        />\n      ))}\n    </AddressListContainer>\n  );\n};\n\nAddressList.propTypes = {\n  addresses: PropTypes.arrayOf(PropTypes.shape(addressShape)).isRequired,\n  isVisible: PropTypes.bool.isRequired,\n  addPoint: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({ addresses: state.addresses.list });\n \nexport default connect(mapStateToProps, null)(AddressList);","import styled from 'styled-components';\n\nexport const AddressBlock = styled.div`\n  z-index: 2;\n  position: fixed;\n  top: 20px;\n  left: 20px;\n\n  @media screen and (max-width: 448px) {\n    top: 0;\n    left: 0;\n    width: 100%;\n  }\n`;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addressShape } from 'store/reducers/addresses';\nimport {\n  fetchAddressList,\n  fetchAddressListSuccess,\n  addPoint,\n} from 'store/actionCreators';\n\nimport {\n  generateAddressId,\n} from 'helpers';\n\nimport AddressInput from '../AddressInput';\nimport AddressList from '../AddressList';\n\nimport { AddressBlock } from './Address.styled';\n\n\nexport class Address extends Component {\n\n  state = { isAddressListVisible: false }\n\n  static propTypes = {\n    addresses: PropTypes.arrayOf(PropTypes.shape(addressShape)).isRequired,\n    fetchAddressList: PropTypes.func.isRequired,\n    fetchAddressListSuccess: PropTypes.func.isRequired,\n    addPoint: PropTypes.func.isRequired,\n    isAddressFetching: PropTypes.bool.isRequired,\n  }\n\n  componentDidUpdate(prevProps) {\n    const { addresses } = this.props;\n    \n    if (addresses.length && !prevProps.addresses.length) {\n      this.showAddressList()\n    }\n  }\n\n  onClickOutside = () => {\n    this.hideAddressList();\n  }\n\n  onAddressInputSubmit = () => {\n    const {\n      addresses,\n      addPoint, \n    } = this.props;\n\n    if (!addresses.length) return;\n\n    addPoint(addresses[0], generateAddressId());\n    this.hideAddressList();\n  }\n\n  showAddressList() {\n    this.setState({ isAddressListVisible: true });\n  }\n\n  hideAddressList() {\n    this.setState({ isAddressListVisible: false });\n  }\n\n  render() {\n    const {\n      onClickOutside,\n      onAddressInputSubmit,\n    } = this;\n\n    const {\n      fetchAddressList,\n      fetchAddressListSuccess,\n      addPoint,\n      addresses,\n      isAddressFetching,\n    } = this.props;\n\n    const { isAddressListVisible } = this.state;\n\n    return ( \n      <AddressBlock>\n        <AddressInput\n          fetchAddressList={fetchAddressList}\n          fetchAddressListSuccess={fetchAddressListSuccess}\n          onClickOutside={onClickOutside}\n          isAddressFetching={isAddressFetching}\n          onSubmit={onAddressInputSubmit}\n          isAddressListVisible={isAddressListVisible}\n        /> \n        <AddressList \n          addresses={addresses}\n          isVisible={isAddressListVisible}\n          addPoint={addPoint} \n        /> \n      </AddressBlock>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  addresses: state.addresses.list,\n  isAddressFetching: state.addresses.isFetching,\n});\n\nconst mapActionCreators = {\n  fetchAddressList,\n  fetchAddressListSuccess,\n  addPoint,\n};\n\nexport default connect(mapStateToProps, mapActionCreators)(Address);","import styled from 'styled-components';\nimport button from 'styles/styled-mixins/button';\n\nexport const PointContainer = styled.div`\n  padding: 5px;\n  display: flex;\n  flex-direction: row;  \n  align-items: center;\n  margin-bottom: 4px;\n  position: relative;\n`;\n\nexport const DragHandle = styled.div`\n  position: relative;\n  top: 1px;\n`;\n\nexport const PointName = styled.span`\n  flex-grow: 2;\n  padding: 5px;\n  cursor: default;\n`;\n\nexport const RemoveButton = styled.button`\n  ${button};\n`;\n\nexport const ButtonIcon = styled.i`\n  font-size: 15px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { pointShape } from 'store/reducers/points';\n\nimport Spinner from '../Spinner';\n\nimport {\n  PointContainer,\n  DragHandle,\n  PointName,\n  RemoveButton,\n  ButtonIcon,\n} from './Point.styled';\n\nconst Point = ({\n  point,\n  onPointRemove,\n  provided,\n}) => {\n  return (\n    <PointContainer>\n      <DragHandle\n        {...provided.dragHandleProps}\n      >\n        <i className=\"icofont-navigation-menu\" />\n      </DragHandle>\n      <PointName>\n        {point.name}\n      </PointName>\n      {point.isSaving ? (\n        <Spinner />\n      ) : (\n        <RemoveButton\n          onClick={() => onPointRemove(point.id)}\n        >\n          <ButtonIcon className=\"icofont-bin\" />\n        </RemoveButton>\n      )}\n    </PointContainer>\n  );\n}\n\nPoint.propTypes = {\n  point: PropTypes.shape(pointShape),\n  onPointRemove: PropTypes.func.isRequired,\n  // eslint-disable-next-line\n  provided: PropTypes.object.isRequired,\n};\n\nPoint.defaultProps = { point: {} };\n \nexport default Point;","import styled from 'styled-components';\n\nexport const PointsListContainer = styled.div`\n  min-height: 30px;\n  max-height: 400px;\n  background-color: #fff;\n  border-radius: 8px;\n  border: 1px solid #e4e4e4;\n  z-index: 1;\n  min-width: 200px;\n  padding-right: 5px;\n\n  @media screen and (max-width: 448px) {\n    width: 100%;\n    padding-right: 0;\n    max-height: 250px;\n    overflow: auto;\n  }\n`;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { pointShape } from 'store/reducers/points';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\nimport { removePoint, changePointOrder } from 'store/actionCreators';\nimport Point from '../Point';\n\n\nimport { PointsListContainer } from './PointsList.styled';\n\nclass PointsList extends Component {\n  static propTypes = {\n    pointsById: PropTypes.shape(pointShape).isRequired,\n    ids: PropTypes.arrayOf(PropTypes.number).isRequired,\n    removePoint: PropTypes.func.isRequired,\n    changePointOrder: PropTypes.func.isRequired,\n  }\n    \n  onDragEnd = (result) => {\n    if (result.reason !== \"DROP\") return;\n\n    const { changePointOrder } = this.props;\n\n    changePointOrder({\n      oldIndex: result.source.index,\n      newIndex: result.destination.index,\n      addressId: result.draggableId,\n    });\n  }\n\n  render() {\n    const { onDragEnd } = this;\n    \n    const {\n      pointsById,\n      ids,\n      removePoint,\n    } = this.props;\n\n    if (!ids.length) {\n      return null;\n    }\n\n    return (\n      <DragDropContext\n        onDragEnd={onDragEnd}\n      >\n        <Droppable droppableId=\"points-droppable\">\n          {provided => (\n            <PointsListContainer\n              ref={provided.innerRef}\n              {...provided.droppableProps}\n            >\n              {ids.map((id, index) => (\n                <Draggable\n                  key={id}\n                  draggableId={id}\n                  index={index}\n                >\n                  {provided => (\n                    <div \n                      ref={provided.innerRef} \n                      {...provided.draggableProps}\n                    >\n                      <Point\n                        point={pointsById[id]}\n                        onPointRemove={removePoint}\n                        provided={provided}\n                      />\n                    </div>\n                  )}\n                </Draggable>\n              ))}\n              {provided.placeholder}\n              {/* <button className=\"points-list__hide-button\"></button> */}\n            </PointsListContainer>\n          )}\n        </Droppable>  \n      </DragDropContext>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  ids: state.points.ids,\n  pointsById: state.points.byId,\n});\n\nconst mapActionCreators = {\n  removePoint,\n  changePointOrder,\n};\n \nexport default connect(mapStateToProps, mapActionCreators)(PointsList);","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  height: 100vh;\n`;\n\nexport const PointsListWrapper = styled.div`\n  position: fixed;\n  z-index: 1;\n  left: 0;\n  top: 0;\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  padding-left: 20px;\n  width: 0;\n\n  @media screen and (max-width: 448px) {\n    top: auto;\n    bottom: 0;\n    height: auto;\n    display: block;\n    width: 100%;\n    padding-left: 0;\n  }\n`;\n\nexport const LoadingOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: #fff;\n  z-index: 5;\n`;","import React, { Component } from 'react';\nimport store from 'store';\nimport { Provider } from 'react-redux';\nimport { YMaps } from 'react-yandex-maps';\n\nimport Map from '../Map';\nimport Address from '../Address';\nimport PointsList from '../PointsList';\nimport Spinner from '../Spinner';\n\nimport { Wrapper, PointsListWrapper, LoadingOverlay } from './App.styled';\n\nconst YMAPS_API_KEY = '7547cd62-6ddd-4fe8-bbef-55ea5c7e70bf';\n\nclass App extends Component {\n  state = { isMapLoaded: false };\n\n  handleMapLoad = () => {\n    this.setState({ isMapLoaded: true });\n  };\n\n  render() {\n    const { isMapLoaded } = this.state;\n\n    return (\n      <>\n        {!isMapLoaded && (\n          <LoadingOverlay>\n            <Spinner large />\n          </LoadingOverlay>\n        )}\n        <Provider store={store}>\n          <YMaps\n            query={{\n              ns: 'use-load-option',\n              apikey: YMAPS_API_KEY,\n              load: 'geocode',\n            }}\n          >\n            <Wrapper>\n              <Map onMapLoad={this.handleMapLoad} />\n              {isMapLoaded && <Address />}\n              <PointsListWrapper>\n                <PointsList />\n              </PointsListWrapper>\n            </Wrapper>\n          </YMaps>\n        </Provider>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\n/* eslint-disable */\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n/* eslint-enable */\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'styles/normalize.css';\nimport 'styles/reset.css';\nimport 'styles/icofont/icofont.min.css';\nimport 'styles/general.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}