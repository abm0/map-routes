{"version":3,"sources":["store/reducers/addresses.js","store/actionTypes.js","helpers/index.js","store/reducers/points.js","store/reducers/index.js","store/index.js","store/localStorage.js","components/Map/index.js","store/actionCreators.js","assets/svg/spinner.svg","components/Spinner/Spinner.styled.js","components/Spinner/index.js","components/AddressInput/AddressInput.styled.js","components/AddressInput/index.js","styles/styled-mixins/button.js","components/AddressItem/AddressItem.styled.js","components/AddressItem/index.js","components/AddressList/AddressList.styled.js","components/AddressList/index.js","components/Address/Address.styled.js","components/Address/index.js","components/Point/Point.styled.js","components/Point/index.js","components/PointsList/PointsList.styled.js","components/PointsList/index.js","components/App/App.styled.js","components/App/index.js","serviceWorker.js","index.js"],"names":["addressesReducer","handleActions","_handleActions","Object","defineProperty","state","objectSpread","isFetching","list","action","toConsumableArray","addressList","PropTypes","string","generateAddressId","Date","getUTCMilliseconds","formatGeocoderResponse","geoObjects","toArray","map","geoObject","_geoObject$geometry$g","geometry","getCoordinates","value","toString","_geoObject$geometry$g2","slicedToArray","lng","lat","name","properties","get","description","pointsReducer","points_handleActions","newState","cloneDeep","byId","newId","id","values","filter","point","address","length","ids","concat","splice","indexOf","oldIndex","newIndex","reorderedIds","arr","console","log","arrCopy","element","leftArr","slice","rightArr","moveElement","coordinates","number","combineReducers","addresses","points","persistedState","namespace","serializedState","localStorage","getItem","JSON","parse","err","loadState","composeEnchancers","composeWithDevTools","store","createStore","reducers","subscribe","stringify","setItem","_unused","saveState","getState","mapConfig","center","zoom","controls","Map","orderedPoints","onDragEnd","e","updatePointPosition","_this","props","originalEvent","target","_coordinates","this","index","_this2","placeMark","type","parseFloat","iconContent","hintContent","balloonContentHeader","balloonContentBody","options","preset","draggable","hintHideTimeout","modules","react_default","a","createElement","react_yandex_maps_esm","assign","key","_this3","onMapLoad","defaultState","width","height","onLoad","onError","error","renderPlacemark","getPolylineGeometry","nextProps","prevState","pointsById","forEach","push","prevIds","lastPoint","getLastPointCoordinates","React","Component","defaultProps","mapActionCreators","connect","_extends","i","arguments","source","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","fill","fillRule","transform","strokeWidth","cx","cy","r","strokeOpacity","attributeName","begin","dur","calcMode","repeatCount","spinner_SvgSpinner","_ref","svgRef","viewBox","stroke","ref","ForwardRef","forwardRef","__webpack_require__","p","SpinnerIcon","styled","withConfig","displayName","componentId","large","color","Spinner","alt","AddressInputBlock","div","Input","input","EnterButtonIcon","span","AddressInput","classCallCheck","possibleConstructorReturn","getPrototypeOf","fetchAddressList","asyncToGenerator","regenerator_default","mark","_callee","_this$props","fetchAddressListSuccess","geocode","result","formattedData","wrap","_context","prev","next","ymaps","sent","stop","_x","handleInputChange","persist","debouncedFetchAddressList","debounce","_this$props2","onClickOutside","onKeyDown","isAddressFetching","isAddressListVisible","isEnterIconVisible","react_outside_click_handler_default","onOutsideClick","data-e2e-id","placeholder","onChange","components_Spinner","withYMaps","styled_mixins_button","darken","AddressItemBlock","li","ItemName","AddButton","button","AddressItem","handleAddClick","onClick","className","AddressListContainer","ul","isVisible","addPoint","components_AddressItem","AddressBlock","Address","_Component","_getPrototypeOf2","_len","args","Array","_key","hideAddressList","handleAddressInputKeyDown","keyCode","inherits","createClass","prevProps","showAddressList","setState","components_AddressInput","components_AddressList","data","PointContainer","DragHandle","PointName","RemoveButton","ButtonIcon","Point","onPointRemove","provided","dragHandleProps","PointsListContainer","PointsList","reason","changePointOrder","destination","addressId","draggableId","removePoint","react_beautiful_dnd_esm","droppableId","innerRef","droppableProps","draggableProps","components_Point","dropData","Wrapper","PointsListWrapper","LoadingOverlay","App","isMapLoaded","handleMapLoad","Fragment","es","query","ns","apikey","load","components_Map","components_Address","components_PointsList","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oYAUMA,EAAmBC,aAAaC,EAAA,GAAAC,OAAAC,EAAA,EAAAD,CAAAD,ECVJ,qBDWE,SAAAG,GAAK,OAAAF,OAAAG,EAAA,EAAAH,CAAA,GAClCE,EADkC,CAErCE,YAAY,EACZC,KAAM,OAJ4BL,OAAAC,EAAA,EAAAD,CAAAD,ECTI,6BDgBE,SAACG,EAAOI,GAAR,OAAAN,OAAAG,EAAA,EAAAH,CAAA,GACrCE,EADqC,CAExCG,KAAKL,OAAAO,EAAA,EAAAP,CAAKM,EAAOE,aACjBJ,YAAY,MAVsBJ,OAAAC,EAAA,EAAAD,CAAAD,ECRC,0BDqBE,SAAAG,GAAK,OAAAF,OAAAG,EAAA,EAAAH,CAAA,GACvCE,EADuC,CAE1CE,YAAY,MAfsBL,GALD,CACnCM,KAAM,GACND,YAAY,IA6BCP,GANRY,IAAUC,OACVD,IAAUC,OACTD,IAAUC,OACHD,IAAUC,OAGVb,YErBFc,EAAoB,kBAC/B,IAAIC,MAAOC,sBAeAC,EAAyB,SAACC,GAoBrC,OAnBsBA,EAAWC,UAEGC,IAAI,SAACC,GAAc,IAAAC,EAEnDD,EAAUE,SACPC,iBACAJ,IAAI,SAAAK,GAAK,OAAIA,EAAMC,aAJ6BC,EAAAxB,OAAAyB,EAAA,EAAAzB,CAAAmB,EAAA,GAC9CO,EAD8CF,EAAA,GASrD,MAAO,CACLG,IAVmDH,EAAA,GAWnDE,MACAE,KANWV,EAAUW,WAAWC,IAAI,QAOpCC,YANkBb,EAAUW,WAAWC,IAAI,6BC7B3CE,EAAgBlC,aAAamC,EAAA,GAAAjC,OAAAC,EAAA,EAAAD,CAACiC,EFRX,YESE,SAAC/B,EAAOI,GAC/B,IAAM4B,EAAWC,IAAUjC,GACnBkC,EAASF,EAATE,KACFC,EAAQ/B,EAAOgC,GAOrB,OALqBtC,OAAOuC,OAAOH,GAAMI,OAAO,SAAAC,GAAK,OACnDA,EAAMd,MAAQrB,EAAOoC,QAAQf,KAC7Bc,EAAMf,MAAQpB,EAAOoC,QAAQhB,MAGdiB,OACR3C,OAAAG,EAAA,EAAAH,CAAA,GAAKkC,GAGPlC,OAAAG,EAAA,EAAAH,CAAA,GACFkC,EADL,CAEEE,KAAKpC,OAAAG,EAAA,EAAAH,CAAA,GACAkC,EAASE,KADVpC,OAAAC,EAAA,EAAAD,CAAA,GAEDqC,EAFCrC,OAAAG,EAAA,EAAAH,CAAA,GAGGM,EAAOoC,QAHV,CAIAJ,GAAID,MAGRO,IAAG,GAAAC,OAAA7C,OAAAO,EAAA,EAAAP,CAAMkC,EAASU,KAAf,CAAoBP,QAxBMrC,OAAAC,EAAA,EAAAD,CAACiC,EFPR,eEmCE,SAAC/B,EAAOI,GAClC,IAAM4B,EAAWC,IAAUjC,GAEzBkC,EAEEF,EAFFE,KACAQ,EACEV,EADFU,IAEMN,EAAOhC,EAAPgC,GAKR,OAHAM,EAAIE,OAAOF,EAAIG,QAAQT,GAAK,UACrBF,EAAKE,GAELtC,OAAAG,EAAA,EAAAH,CAAA,GACFkC,EADL,CAEEE,KAAKpC,OAAAG,EAAA,EAAAH,CAAA,GAAMoC,GACXQ,IAAI5C,OAAAO,EAAA,EAAAP,CAAK4C,OA1CoB5C,OAAAC,EAAA,EAAAD,CAACiC,EFNF,qBEoDE,SAAC/B,EAAOI,GACxC,IAAM4B,EAAWC,IAAUjC,GAGzB8C,EAEE1C,EAFF0C,SACAC,EACE3C,EADF2C,SAKIC,EDpEiB,SAACC,EAAKH,EAAUC,GACzC,GAAID,EAAWG,EAAIR,OAAS,GAAKM,EAAWE,EAAIR,OAAS,EAEvD,OADAS,QAAQC,IAAI,iCACLF,EAGT,IAAMG,EAAOtD,OAAAO,EAAA,EAAAP,CAAOmD,GAEdI,EAAUD,EAAQR,OAAOE,EAAU,GACnCQ,EAAUF,EAAQG,MAAM,EAAGR,GAC3BS,EAAWJ,EAAQG,MAAMR,GAE/B,SAAAJ,OAAA7C,OAAAO,EAAA,EAAAP,CAAWwD,GAAXxD,OAAAO,EAAA,EAAAP,CAAuBuD,GAAvBvD,OAAAO,EAAA,EAAAP,CAAmC0D,ICwDZC,CAFLzB,EAARU,IAE8BI,EAAUC,GAEhD,OAAOjD,OAAAG,EAAA,EAAAH,CAAA,GACFkC,EADL,CAEEU,IAAKM,MA5DwBlD,OAAAC,EAAA,EAAAD,CAACiC,EFLC,wBEqEE,SAAC/B,EAAOI,GAC3C,IAAM4B,EAAWC,IAAUjC,GAGzB0D,EAEEtD,EAFFsD,YACAtB,EACEhC,EADFgC,GAGMF,EAASF,EAATE,KAKR,OAHAA,EAAKE,GAAIZ,IAAMkC,EAAY,GAAGrC,WAC9Ba,EAAKE,GAAIX,IAAMiC,EAAY,GAAGrC,WAEvBvB,OAAAG,EAAA,EAAAH,CAAA,GACFkC,EADL,CAEEE,KAAKpC,OAAAG,EAAA,EAAAH,CAAA,GAAMoC,OA/EkBH,GALD,CAChCG,KAAM,GACNQ,IAAK,KA+FQZ,GAPTvB,IAAUoD,OACRpD,IAAUC,OACHD,IAAUC,OAClBD,IAAUC,OACVD,IAAUC,OAGFsB,GCnGA8B,4BAAgB,CAC7BC,YACAC,WCCIC,ECRmB,SAAAC,GACvB,IACE,IAAMC,EAAkBC,aAAaC,QAAQH,GAC7C,GAAwB,OAApBC,EACF,OAEF,OAAOG,KAAKC,MAAMJ,GAClB,MAAOK,GACP,QDAmBC,CAFG,cAGpBC,EAAoBC,8BAAoB,IAExCC,EAAQC,sBAAYC,EAAUb,EAAgBS,KAEpDE,EAAMG,UAAU,YCDS,SAACb,EAAWhE,GACnC,IACE,IAAMiE,EAAkBG,KAAKU,UAAU9E,GACvCkE,aAAaa,QAAQf,EAAWC,GAChC,MAAAe,KDFFC,CARwB,aAQKP,EAAMQ,cAGtBR,uBEDTS,EAAY,CAChBC,OAAQ,CAAC,MAAO,OAChBC,KAAM,EACNC,SAAU,GACVxB,OAAQ,IAGJyB,6MAaJvF,qBACKmF,GACHK,cAAe,GACf9C,IAAK,OA0BP+C,UAAY,SAACC,EAAGtD,IAKduD,EAJgCC,EAAKC,MAA7BF,qBAEYD,EAAEI,cAAcC,OAAO7E,SAAS8E,aAEnB5D,yFAMjC,OAF0B6D,KAAKjG,MAAvBwF,cAEazE,IAAI,SAAAwB,GAAK,MAC5B,CACEA,EAAMf,IACNe,EAAMd,+CAKIc,EAAO2D,GAAO,IAAAC,EAAAF,KAMtBG,EAAY,CAChBlF,SAAU,CACRmF,KAAM,QACN3C,YARgB,CAClB4C,WAAW/D,EAAMf,KACjB8E,WAAW/D,EAAMd,OAQjBE,WAAY,CACV4E,YAAaL,EAAQ,EACrBM,YAAajE,EAAMb,KACnB+E,qBAAsBlE,EAAMb,KAC5BgF,mBAAoBnE,EAAMV,aAE5B8E,QAAS,CACPC,OAAQ,mBACRC,WAAW,EACXC,gBAAiB,GAEnBC,QAAS,CAAC,0BAA2B,yBAGvC,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAADrH,OAAAsH,OAAA,CACEC,IAAK9E,EAAMH,GACXqD,UAAW,SAACC,GAAD,OAAOS,EAAKV,UAAUC,EAAGnD,EAAMH,MACtCgE,qCAKD,IAAAkB,EAAArB,KACCsB,EAActB,KAAKJ,MAAnB0B,UAEA/B,EAAkBS,KAAKjG,MAAvBwF,cAER,OACEwB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEnH,MAAOiG,KAAKjG,MACZwH,aAAcvB,KAAKjG,MACnByH,MAAM,OACNC,OAAO,OACPC,OAAQJ,EACRK,QAAS,SAACC,GAAD,OAAW3E,QAAQC,IAAI0E,KAE/BrC,EAAczE,IAAI,SAACwB,EAAO2D,GAAR,OACjBoB,EAAKQ,gBAAgBvF,EAAO2D,KAE9Bc,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAUjG,SAAU+E,KAAK8B,oBAAoBvC,yDA7FnBwC,EAAWC,GAAW,IAElDvF,EACEsF,EADFtF,IAAKwF,EACHF,EADGE,WAED1C,EAAgB,GAEtB9C,EAAIyF,QAAQ,SAAA/F,GACVoD,EAAc4C,KAAKF,EAAW9F,MAGhC,ILlCyBiG,EKkCnBrG,EAAW,CACfwD,gBACA9C,OAOF,OL3CyB2F,EKuCRJ,EAAUvF,IAAKsF,EAAUtF,ILtC7BD,OAAS4F,EAAQ5F,SKuC5BT,EAASoD,OLpCwB,SAACI,GACtC,IAAM8C,EAAY9C,EAAcA,EAAc/C,OAAS,GAEvD,MAAO,CACL6F,EAAU9G,IACV8G,EAAU7G,KK+BU8G,CAAwB/C,IAGrCxD,SAtCOwG,IAAMC,WAAlBlD,EAQGmD,aAAe,CACpBR,WAAY,GACZxF,IAAK,IA4GT,IAKMiG,EAAoB,CAAEhD,oBCvHO,SAACjC,EAAatB,GAAd,MAAsB,CACvDiE,KPrBmC,wBOsBnC3C,cACAtB,QDsHawG,cAPS,SAAC5I,GAAD,MAAY,CAClCkI,WAAYlI,EAAM8D,OAAO5B,KACzBQ,IAAK1C,EAAM8D,OAAOpB,MAKoBiG,EAAzBC,CAA4CrD,iEEpJ3D,SAAAsD,IAAmR,OAA9PA,EAAA/I,OAAAsH,QAAA,SAAArB,GAAgD,QAAA+C,EAAA,EAAgBA,EAAAC,UAAAtG,OAAsBqG,IAAA,CAAO,IAAAE,EAAAD,UAAAD,GAA2B,QAAAzB,KAAA2B,EAA0BlJ,OAAAmJ,UAAAC,eAAAC,KAAAH,EAAA3B,KAAyDtB,EAAAsB,GAAA2B,EAAA3B,IAAiC,OAAAtB,IAAkBqD,MAAAnD,KAAA8C,WAEnR,SAAAM,EAAAL,EAAAM,GAAqD,SAAAN,EAAA,SAA+B,IAA8D3B,EAAAyB,EAA9D/C,EAEpF,SAAAiD,EAAAM,GAA0D,SAAAN,EAAA,SAA+B,IAAuD3B,EAAAyB,EAAvD/C,EAAA,GAAiBwD,EAAAzJ,OAAA0J,KAAAR,GAAkD,IAAAF,EAAA,EAAYA,EAAAS,EAAA9G,OAAuBqG,IAAOzB,EAAAkC,EAAAT,GAAqBQ,EAAAzG,QAAAwE,IAAA,IAA0CtB,EAAAsB,GAAA2B,EAAA3B,IAA6B,OAAAtB,EAF9M0D,CAAAT,EAAAM,GAA0E,GAAAxJ,OAAA4J,sBAAA,CAAoC,IAAAC,EAAA7J,OAAA4J,sBAAAV,GAA6D,IAAAF,EAAA,EAAYA,EAAAa,EAAAlH,OAA6BqG,IAAOzB,EAAAsC,EAAAb,GAA2BQ,EAAAzG,QAAAwE,IAAA,GAA0CvH,OAAAmJ,UAAAW,qBAAAT,KAAAH,EAAA3B,KAAwEtB,EAAAsB,GAAA2B,EAAA3B,IAA+B,OAAAtB,EAM3d,IAAA8D,EAEA7C,EAAAC,EAAKC,cAAA,KACL4C,KAAA,OACAC,SAAA,UACAC,UAAA,iBACAC,YAAA,GACGjD,EAAAC,EAAKC,cAAA,UACRgD,GAAA,GACAC,GAAA,GACAC,EAAA,QACAC,cAAA,GACGrD,EAAAC,EAAKC,cAAA,WACRoD,cAAA,IACAC,MAAA,OACAC,IAAA,KACAnI,OAAA,OACAoI,SAAA,SACAC,YAAA,eACI1D,EAAAC,EAAKC,cAAA,WACToD,cAAA,iBACAC,MAAA,OACAC,IAAA,KACAnI,OAAA,MACAoI,SAAA,SACAC,YAAA,eACI1D,EAAAC,EAAKC,cAAA,WACToD,cAAA,eACAC,MAAA,OACAC,IAAA,KACAnI,OAAA,MACAoI,SAAA,SACAC,YAAA,gBACK1D,EAAAC,EAAKC,cAAA,UACVgD,GAAA,GACAC,GAAA,GACAC,EAAA,OACAC,cAAA,GACGrD,EAAAC,EAAKC,cAAA,WACRoD,cAAA,IACAC,MAAA,KACAC,IAAA,KACAnI,OAAA,OACAoI,SAAA,SACAC,YAAA,eACI1D,EAAAC,EAAKC,cAAA,WACToD,cAAA,iBACAC,MAAA,KACAC,IAAA,KACAnI,OAAA,MACAoI,SAAA,SACAC,YAAA,eACI1D,EAAAC,EAAKC,cAAA,WACToD,cAAA,eACAC,MAAA,KACAC,IAAA,KACAnI,OAAA,MACAoI,SAAA,SACAC,YAAA,gBACK1D,EAAAC,EAAKC,cAAA,UACVgD,GAAA,GACAC,GAAA,GACAC,EAAA,SACGpD,EAAAC,EAAKC,cAAA,WACRoD,cAAA,IACAC,MAAA,KACAC,IAAA,OACAnI,OAAA,gBACAoI,SAAA,SACAC,YAAA,iBAGIC,EAAU,SAAAC,GACd,IAAAC,EAAAD,EAAAC,OACAhF,EAAAwD,EAAAuB,EAAA,YAEA,OAAS5D,EAAAC,EAAKC,cAAA,MAAA2B,EAAA,CACdpB,MAAA,GACAC,OAAA,GACAoD,QAAA,YACAC,OAAA,OACAC,IAAAH,GACGhF,GAAAgE,IAGHoB,EAAiBjE,EAAAC,EAAKiE,WAAA,SAAArF,EAAAmF,GACtB,OAAShE,EAAAC,EAAKC,cAAeyD,EAAU9B,EAAA,CACvCgC,OAAAG,GACGnF,UAEYsF,EAAAC,QC7FFC,GAAcC,KAAOxC,EAAVyC,WAAA,CAAAC,YAAA,6BAAAC,YAAA,gBAAGH,CAAH,+EAEb,SAACzF,GAAD,OAAWA,EAAM6F,MAJV,QADE,QAMR,SAAC7F,GAAD,OAAWA,EAAM6F,MALX,QADE,QASN,SAAC7F,GAAD,OAAWA,EAAM8F,QCLzBC,GAAU,SAAAhB,GAAA,IACdc,EADcd,EACdc,MACAC,EAFcf,EAEde,MAFc,OAId3E,EAAAC,EAAAC,cAACmE,GAAD,CACEK,MAAOA,EACPC,MAAOA,EACPE,IAAI,WAEJ7E,EAAAC,EAAAC,cAAC+D,EAAD,QASJW,GAAQlD,aAAe,CACrBgD,OAAO,EACPC,MAAO,cAGMC,UC3BFE,GAAoBR,KAAOS,IAAVR,WAAA,CAAAC,YAAA,wCAAAC,YAAA,gBAAGH,CAAH,sTAwBjBU,GAAQV,KAAOW,MAAVV,WAAA,CAAAC,YAAA,4BAAAC,YAAA,gBAAGH,CAAH,6IAWLY,GAAkBZ,KAAOa,KAAVZ,WAAA,CAAAC,YAAA,sCAAAC,YAAA,gBAAGH,CAAH,kcCtBtBc,eAUJ,SAAAA,EAAYvG,GAAO,IAAAD,EAAA,OAAA9F,OAAAuM,EAAA,EAAAvM,CAAAmG,KAAAmG,IACjBxG,EAAA9F,OAAAwM,EAAA,EAAAxM,CAAAmG,KAAAnG,OAAAyM,EAAA,EAAAzM,CAAAsM,GAAAjD,KAAAlD,KAAMJ,KAIR2G,iBALmB,eAAA5B,EAAA9K,OAAA2M,EAAA,EAAA3M,CAAA4M,EAAAzF,EAAA0F,KAKA,SAAAC,EAAMxL,GAAN,IAAAyL,EAAAL,EAAAM,EAAAC,EAAAC,EAAAC,EAAA,OAAAP,EAAAzF,EAAAiG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAR,EAIbjH,EAAKC,MAFP2G,EAFeK,EAEfL,iBACAM,EAHeD,EAGfC,wBAGMC,EAAYnH,EAAKC,MAAMyH,MAAvBP,QAERP,IARiBW,EAAAE,KAAA,EASIN,EAAQ3L,GATZ,OASX4L,EATWG,EAAAI,KAUXN,EAAgBrM,EAAuBoM,EAAOnM,YACpDiM,EAAwBG,GAXP,wBAAAE,EAAAK,SAAAZ,MALA,gBAAAa,GAAA,OAAA7C,EAAAxB,MAAAnD,KAAA8C,YAAA,GAAAnD,EAmBnB8H,kBAAoB,SAAAhI,GAClBA,EAAEiI,UADqB,IAEfvM,EAAUsE,EAAEK,OAAZ3E,MAERwE,EAAKgI,0BAA0BxM,IArB/BwE,EAAKgI,0BAA4BC,IAASjI,EAAK4G,iBAAkB,KAFhD5G,wEA0BV,IAAAkI,EAMH7H,KAAKJ,MAJPkI,EAFKD,EAELC,eACAC,EAHKF,EAGLE,UACAC,EAJKH,EAILG,kBACAC,EALKJ,EAKLI,qBAGIC,GAAsBF,GAAqBC,EAEjD,OACElH,EAAAC,EAAAC,cAAC4E,GAAD,KACE9E,EAAAC,EAAAC,cAACkH,EAAAnH,EAAD,CAAqBoH,eAAgBN,GACnC/G,EAAAC,EAAAC,cAAC8E,GAAD,CACEsC,cAAY,gBACZjI,KAAK,OACLkI,YAAY,YACZC,SAAUvI,KAAKyH,kBACfM,UAAWA,KAGdC,GAAqBjH,EAAAC,EAAAC,cAACuH,GAAD,MACrBN,GAAsBnH,EAAAC,EAAAC,cAACgF,GAAD,cA1DJzD,aAgEZiG,eAAUtC,cC7EVuC,GAAA,0OAAAhM,OAWSiM,aAAO,IAAM,QAXtB,mCCCFC,GAAmBvD,KAAOwD,GAAVvD,WAAA,CAAAC,YAAA,sCAAAC,YAAA,YAAGH,CAAH,+BAKhByD,GAAWzD,KAAOa,KAAVZ,WAAA,CAAAC,YAAA,8BAAAC,YAAA,YAAGH,CAAH,kDAMR0D,GAAY1D,KAAO2D,OAAV1D,WAAA,CAAAC,YAAA,+BAAAC,YAAA,YAAGH,CAAH,QACnB2D,ICJGC,GAAc,SAAAtE,GAEd,IADLpI,EACKoI,EADLpI,QAAS2M,EACJvE,EADIuE,eAER,OACEnI,EAAAC,EAAAC,cAAC2H,GAAD,CACEP,cAAY,gBAEZtH,EAAAC,EAAAC,cAAC6H,GAAD,KACGvM,EAAQd,MAEXsF,EAAAC,EAAAC,cAAC8H,GAAD,CACEI,QAAS,kBAAMD,EAAe3M,EAAS/B,OAEvCuG,EAAAC,EAAAC,cAAA,KAAGmI,UAAU,oBAgBrBH,GAAYxG,aAAe,CAAElG,QAAS,IAEvB0M,UCxCFI,GAAuBhE,KAAOiE,GAAVhE,WAAA,CAAAC,YAAA,0CAAAC,YAAA,gBAAGH,CAAH,iOAYpB,SAACzF,GAAD,OAAWA,EAAM2J,UAAY,QAAU,SCoBrC5G,eAFS,SAAC5I,GAAD,MAAY,CAAE6D,UAAW7D,EAAM6D,UAAU1D,OAEzB,KAAzByI,CA1BK,SAAAgC,GAId,IAHJ/G,EAGI+G,EAHJ/G,UACA2L,EAEI5E,EAFJ4E,UACAC,EACI7E,EADJ6E,SAEA,OACEzI,EAAAC,EAAAC,cAACoI,GAAD,CAAsBE,UAAWA,GAC9B3L,EAAU9C,IAAI,SAACyB,EAAS0D,GAAV,OACbc,EAAAC,EAAAC,cAACwI,GAAD,CACElN,QAASA,EACT6E,IAAG,WAAA1E,OAAauD,GAChBiJ,eAAgBM,SCjBbE,GAAerE,KAAOS,IAAVR,WAAA,CAAAC,YAAA,8BAAAC,YAAA,eAAGH,CAAH,+GCkBZsE,GAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAlK,EAAA9F,OAAAuM,EAAA,EAAAvM,CAAAmG,KAAA2J,GAAA,QAAAG,EAAAhH,UAAAtG,OAAAuN,EAAA,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAF,EAAAE,GAAAnH,UAAAmH,GAAA,OAAAtK,EAAA9F,OAAAwM,EAAA,EAAAxM,CAAAmG,MAAA6J,EAAAhQ,OAAAyM,EAAA,EAAAzM,CAAA8P,IAAAzG,KAAAC,MAAA0G,EAAA,CAAA7J,MAAAtD,OAAAqN,MAEEhQ,MAAQ,CAAEkO,sBAAsB,GAFlCtI,EAoBEmI,eAAiB,WACfnI,EAAKuK,mBArBTvK,EAwBEwK,0BAA4B,SAAC1K,GAAM,IAAAmH,EAI7BjH,EAAKC,MAFPhC,EAF+BgJ,EAE/BhJ,UACA4L,EAH+B5C,EAG/B4C,SAGG5L,EAAUpB,QAEG,KAAdiD,EAAE2K,UACJZ,EAAS5L,EAAU,GAAIpD,KACvBmF,EAAKuK,oBAlCXvK,EAAA,OAAA9F,OAAAwQ,EAAA,EAAAxQ,CAAA8P,EAAAC,GAAA/P,OAAAyQ,EAAA,EAAAzQ,CAAA8P,EAAA,EAAAvI,IAAA,qBAAAjG,MAAA,SAYqBoP,GACKvK,KAAKJ,MAAnBhC,UAEMpB,SAAW+N,EAAU3M,UAAUpB,QAC3CwD,KAAKwK,oBAhBX,CAAApJ,IAAA,kBAAAjG,MAAA,WAuCI6E,KAAKyK,SAAS,CAAExC,sBAAsB,MAvC1C,CAAA7G,IAAA,kBAAAjG,MAAA,WA2CI6E,KAAKyK,SAAS,CAAExC,sBAAsB,MA3C1C,CAAA7G,IAAA,SAAAjG,MAAA,WA8CW,IAEL2M,EAEE9H,KAFF8H,eACAqC,EACEnK,KADFmK,0BAHKtC,EAYH7H,KAAKJ,MALP2G,EAPKsB,EAOLtB,iBACAM,EARKgB,EAQLhB,wBACA2C,EATK3B,EASL2B,SACA5L,EAVKiK,EAULjK,UACAoK,EAXKH,EAWLG,kBAGMC,EAAyBjI,KAAKjG,MAA9BkO,qBAER,OACElH,EAAAC,EAAAC,cAACyI,GAAD,KACE3I,EAAAC,EAAAC,cAACyJ,GAAD,CACEnE,iBAAkBA,EAClBM,wBAAyBA,EACzBiB,eAAgBA,EAChBE,kBAAmBA,EACnBD,UAAWoC,EACXlC,qBAAsBA,IAExBlH,EAAAC,EAAAC,cAAC0J,GAAD,CACE/M,UAAWA,EACX2L,UAAWtB,EACXuB,SAAUA,SA3EpBG,EAAA,CAA6BnH,aAuFvBE,GAAoB,CACxB6D,iBZ1G8B,iBAAO,CACrCnG,KPHgC,uBmB6GhCyG,wBZvGqC,SAAC+D,GAAD,MAAW,CAChDxK,KPNwC,6BOOxC/F,YAAauQ,IYsGbpB,SZnGsB,SAACjN,EAASJ,GAAV,MAAkB,CACxCiE,KPRuB,YOSvB7D,UACAJ,QYmGawG,eAXS,SAAC5I,GAAD,MAAY,CAClC6D,UAAW7D,EAAM6D,UAAU1D,KAC3B8N,kBAAmBjO,EAAM6D,UAAU3D,aASGyI,GAAzBC,CAA4CgH,aC9G9CkB,GAAiBxF,KAAOS,IAAVR,WAAA,CAAAC,YAAA,8BAAAC,YAAA,gBAAGH,CAAH,yGASdyF,GAAazF,KAAOS,IAAVR,WAAA,CAAAC,YAAA,0BAAAC,YAAA,gBAAGH,CAAH,gCAKV0F,GAAY1F,KAAOa,KAAVZ,WAAA,CAAAC,YAAA,yBAAAC,YAAA,gBAAGH,CAAH,6CAMT2F,GAAe3F,KAAO2D,OAAV1D,WAAA,CAAAC,YAAA,4BAAAC,YAAA,gBAAGH,CAAH,SACrB2D,IAGSiC,GAAa5F,KAAOxC,EAAVyC,WAAA,CAAAC,YAAA,0BAAAC,YAAA,gBAAGH,CAAH,qBChBjB6F,GAAQ,SAAAvG,GAER,IADLrI,EACKqI,EADLrI,MAAO6O,EACFxG,EADEwG,cAAeC,EACjBzG,EADiByG,SAErB,OACErK,EAAAC,EAAAC,cAAC4J,GAAD,KACE9J,EAAAC,EAAAC,cAAC6J,GACKM,EAASC,gBAEbtK,EAAAC,EAAAC,cAAA,KAAGmI,UAAU,6BAEfrI,EAAAC,EAAAC,cAAC8J,GAAD,KACGzO,EAAMb,MAETsF,EAAAC,EAAAC,cAAC+J,GAAD,CACE7B,QAAS,kBAAMgC,EAAc7O,EAAMH,MAEnC4E,EAAAC,EAAAC,cAACgK,GAAD,CAAY7B,UAAU,mBAa9B8B,GAAMzI,aAAe,CAAEnG,MAAO,IAEf4O,UCxCFI,GAAsBjG,KAAOS,IAAVR,WAAA,CAAAC,YAAA,wCAAAC,YAAA,gBAAGH,CAAH,mPCU1BkG,8MAQJ/L,UAAY,SAACuH,GACW,SAAlBA,EAAOyE,SAIXC,EAF6B9L,EAAKC,MAA1B6L,kBAES,CACf5O,SAAUkK,EAAOhE,OAAO9C,MACxBnD,SAAUiK,EAAO2E,YAAYzL,MAC7B0L,UAAW5E,EAAO6E,uFAIb,IACCpM,EAAcQ,KAAdR,UADDoH,EAOH5G,KAAKJ,MAHPqC,EAJK2E,EAIL3E,WACAxF,EALKmK,EAKLnK,IACAoP,EANKjF,EAMLiF,YAGF,OAAKpP,EAAID,OAKPuE,EAAAC,EAAAC,cAAC6K,GAAA,EAAD,CACEtM,UAAWA,GAEXuB,EAAAC,EAAAC,cAAC6K,GAAA,EAAD,CAAWC,YAAY,oBACpB,SAAAX,GAAQ,OACPrK,EAAAC,EAAAC,cAACqK,GAADzR,OAAAsH,OAAA,CACE4D,IAAKqG,EAASY,UACVZ,EAASa,gBAEZxP,EAAI3B,IAAI,SAACqB,EAAI8D,GAAL,OACPc,EAAAC,EAAAC,cAAC6K,GAAA,EAAD,CACE1K,IAAKjF,EACLyP,YAAazP,EACb8D,MAAOA,GAEN,SAAAmL,GAAQ,OACPrK,EAAAC,EAAAC,cAAA,MAAApH,OAAAsH,OAAA,CACE4D,IAAKqG,EAASY,UACVZ,EAASc,gBAEbnL,EAAAC,EAAAC,cAACkL,GAAD,CACE7P,MAAO2F,EAAW9F,GAClBgP,cAAeU,EACfT,SAAUA,SAMnBA,EAAS9C,gBAjCX,YA9BY9F,aA8EnBE,GAAoB,CACxBmJ,YhB1EyB,SAAC1P,GAAD,MAAS,CAClCiE,KPb0B,eOc1BjE,OgByEAsP,iBhBtE8B,SAACW,GAAD,OAAAvS,OAAAG,EAAA,EAAAH,CAAA,CAC9BuG,KPjBgC,sBOkB7BgM,KgBuEUzJ,eAVS,SAAC5I,GAAD,MAAY,CAClC0C,IAAK1C,EAAM8D,OAAOpB,IAClBwF,WAAYlI,EAAM8D,OAAO5B,OAQayG,GAAzBC,CAA4C4I,IC7F9Cc,GAAUhH,KAAOS,IAAVR,WAAA,CAAAC,YAAA,qBAAAC,YAAA,eAAGH,CAAH,mBAIPiH,GAAoBjH,KAAOS,IAAVR,WAAA,CAAAC,YAAA,+BAAAC,YAAA,eAAGH,CAAH,8NAqBjBkH,GAAiBlH,KAAOS,IAAVR,WAAA,CAAAC,YAAA,4BAAAC,YAAA,eAAGH,CAAH,kJC0BZmH,8MAtCbzS,MAAQ,CAAE0S,aAAa,KAEvBC,cAAgB,WACd/M,EAAK8K,SAAS,CAAEgC,aAAa,6EAGtB,IACCA,EAAgBzM,KAAKjG,MAArB0S,YAER,OACE1L,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2L,SAAA,MACIF,GACA1L,EAAAC,EAAAC,cAACsL,GAAD,KACExL,EAAAC,EAAAC,cAACuH,GAAD,CAAS/C,OAAK,KAGlB1E,EAAAC,EAAAC,cAAC2L,EAAA,EAAD,CAAUnO,MAAOA,GACfsC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE2L,MAAO,CACLC,GAAI,kBACJC,OAvBQ,uCAwBRC,KAAM,YAGRjM,EAAAC,EAAAC,cAACoL,GAAD,KACEtL,EAAAC,EAAAC,cAACgM,EAAD,CAAK3L,UAAWtB,KAAK0M,gBACpBD,GAAe1L,EAAAC,EAAAC,cAACiM,GAAD,MAChBnM,EAAAC,EAAAC,cAACqL,GAAD,KACEvL,EAAAC,EAAAC,cAACkM,GAAD,kBA7BE3K,aCDE4K,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MAAM,uFCRnCC,IAASC,OAAO3M,EAAAC,EAAAC,cAAC0M,GAAD,MAASC,SAASC,eAAe,SDoH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.09457a1c.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport { handleActions } from 'redux-actions';\n\nimport * as actionTypes from '../actionTypes';\n\nexport const initialAddressesState = {\n  list: [],\n  isFetching: false,\n};\n\nconst addressesReducer = handleActions({\n  [actionTypes.ADDRESS_LIST_FETCH]: state => ({\n    ...state,\n    isFetching: true,\n    list: [],\n  }),\n\n  [actionTypes.ADDRESS_LIST_FETCH_SUCCESS]: (state, action) => ({\n    ...state,\n    list: [...action.addressList],\n    isFetching: false,\n  }),\n\n  [actionTypes.ADDRESS_LIST_FETCH_FAIL]: state => ({\n    ...state,\n    isFetching: false,\n  }),\n}, initialAddressesState);\n\nexport const addressShape = {\n  lat: PropTypes.string,\n  lng: PropTypes.string,\n  name: PropTypes.string,\n  description: PropTypes.string,\n};\n\nexport default addressesReducer;","export const ADDRESS_LIST_FETCH = 'ADDRESS_LIST_FETCH';\nexport const ADDRESS_LIST_FETCH_SUCCESS = 'ADDRESS_LIST_FETCH_SUCCESS';\nexport const ADDRESS_LIST_FETCH_FAIL = 'ADDRESS_LIST_FETCH_FAIL';\n\nexport const POINT_ADD = 'POINT_ADD';\nexport const POINT_REMOVE = 'POINT_REMOVE';\nexport const POINT_ORDER_CHANGE = 'POINT_ORDER_CHANGE';\nexport const POINT_POSITION_CHANGE = 'POINT_POSITION_CHANGE';\n","export const moveElement = (arr, oldIndex, newIndex) => {\n  if (oldIndex > arr.length - 1 || newIndex > arr.length - 1) {\n    console.log(\"Position exceeds array length\");\n    return arr;\n  }\n\n  const arrCopy = [...arr];\n\n  const element = arrCopy.splice(oldIndex, 1);\n  const leftArr = arrCopy.slice(0, newIndex);\n  const rightArr = arrCopy.slice(newIndex);\n\n  return [...leftArr, ...element, ...rightArr];\n}\n\nexport const generateAddressId = () =>\n  new Date().getUTCMilliseconds()\n\nexport const isPointAdded = (prevIds, nextIds) => {\n  return nextIds.length > prevIds.length;\n};\n\nexport const getLastPointCoordinates = (orderedPoints) => {\n  const lastPoint = orderedPoints[orderedPoints.length - 1];\n\n  return [\n    lastPoint.lng,\n    lastPoint.lat,\n  ];\n};\n\nexport const formatGeocoderResponse = (geoObjects) => {\n  const geoObjectsArr = geoObjects.toArray();\n\n  const formattedData = geoObjectsArr.map((geoObject) => {\n    const [lng, lat] = \n      geoObject.geometry\n        .getCoordinates()\n        .map(value => value.toString());\n      \n    const name = geoObject.properties.get('name');\n    const description = geoObject.properties.get('text');\n\n    return {\n      lat,\n      lng,\n      name,\n      description,\n    };\n  });\n  \n  return formattedData;\n};","import PropTypes from 'prop-types';\nimport { handleActions } from 'redux-actions';\nimport { moveElement } from 'helpers';\n\nimport cloneDeep from 'lodash/cloneDeep';\nimport * as actionTypes from '../actionTypes';\n\nexport const initialPointsState = {\n  byId: {},\n  ids: [],\n};\n\nconst pointsReducer = handleActions({\n  [actionTypes.POINT_ADD]: (state, action) => {\n    const newState = cloneDeep(state);\n    const { byId } = newState;\n    const newId = action.id;\n\n    const presentPoint = Object.values(byId).filter(point =>\n      point.lat === action.address.lat &&\n      point.lng === action.address.lng,\n    );\n\n    if (presentPoint.length) {\n      return { ...newState };\n    }\n    \n    return {\n      ...newState,\n      byId: {\n        ...newState.byId,\n        [newId]: {\n          ...action.address,\n          id: newId,\n        },\n      },\n      ids: [...newState.ids, newId],\n    };\n  },\n  \n  [actionTypes.POINT_REMOVE]: (state, action) => {\n    const newState = cloneDeep(state);\n    const {\n      byId, \n      ids,\n    } = newState;\n    const { id } = action;\n\n    ids.splice(ids.indexOf(id), 1);\n    delete byId[id];\n\n    return {\n      ...newState,\n      byId: { ...byId },\n      ids: [...ids],\n    };\n  },\n  \n  [actionTypes.POINT_ORDER_CHANGE]: (state, action) => {\n    const newState = cloneDeep(state);\n    \n    const {\n      oldIndex,\n      newIndex,\n    } = action;\n\n    const { ids } = newState;\n\n    const reorderedIds = moveElement(ids, oldIndex, newIndex)\n\n    return {\n      ...newState,\n      ids: reorderedIds,\n    };\n  },\n\n  [actionTypes.POINT_POSITION_CHANGE]: (state, action) => {\n    const newState = cloneDeep(state);\n    \n    const {\n      coordinates,\n      id,\n    } = action;\n    \n    const { byId } = newState;\n\n    byId[id].lng = coordinates[0].toString();\n    byId[id].lat = coordinates[1].toString();\n\n    return {\n      ...newState,\n      byId: { ...byId },\n    }\n  },\n}, initialPointsState);\n\nexport const pointShape = {\n  id: PropTypes.number,\n  name: PropTypes.string,\n  description: PropTypes.string,\n  lat: PropTypes.string,\n  lng: PropTypes.string,\n};\n\nexport default pointsReducer;","import { combineReducers } from 'redux';\n\nimport addresses from './addresses';\nimport points from './points';\n\nexport default combineReducers({\n  addresses,\n  points,\n});","import { createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { loadState, saveState } from 'store/localStorage';\n\nimport reducers from './reducers';\n\nconst STORAGE_NAMESPACE = 'map-routes';\n\nconst persistedState = loadState(STORAGE_NAMESPACE);\nconst composeEnchancers = composeWithDevTools({});\n\nconst store = createStore(reducers, persistedState, composeEnchancers());\n\nstore.subscribe(() => {\n  saveState(STORAGE_NAMESPACE, store.getState());\n});\n\nexport default store;\n","export const loadState = namespace => {\n  try {\n    const serializedState = localStorage.getItem(namespace);\n    if (serializedState === null) {\n      return undefined;\n    }\n    return JSON.parse(serializedState);\n  } catch (err) {\n    return undefined;\n  }\n}; \n\nexport const saveState = (namespace, state) => {\n  try {\n    const serializedState = JSON.stringify(state);\n    localStorage.setItem(namespace, serializedState);\n  } catch {\n    // ignore write errors\n  }\n};\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { pointShape } from 'store/reducers/points';\nimport { \n  Map as YMap,\n  Placemark,\n  Polyline,\n} from 'react-yandex-maps';\n\nimport { updatePointPosition } from 'store/actionCreators';\nimport {\n  isPointAdded,\n  getLastPointCoordinates,\n} from 'helpers';\n\nconst mapConfig = {\n  center: [55.75, 37.57], \n  zoom: 9,\n  controls: [],\n  points: {},\n};\n\nclass Map extends React.Component {\n  static propTypes = {\n    pointsById: PropTypes.shape(pointShape),\n    ids: PropTypes.arrayOf(PropTypes.number),\n    onMapLoad: PropTypes.func.isRequired,\n    updatePointPosition: PropTypes.func.isRequired,\n  }\n\n  static defaultProps = { \n    pointsById: {},\n    ids: [],\n  }\n  \n  state = {\n    ...mapConfig,\n    orderedPoints: [],\n    ids: [],\n  }\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const {\n      ids, pointsById, \n    } = nextProps;\n    const orderedPoints = [];\n    \n    ids.forEach(id => {\n      orderedPoints.push(pointsById[id]);\n    });\n\n    const newState = {\n      orderedPoints,\n      ids,\n    };\n\n    if (isPointAdded(prevState.ids, nextProps.ids)) {\n      newState.center = getLastPointCoordinates(orderedPoints);\n    }\n\n    return newState;\n  }\n  \n  // TODO: implement updating name on drag end\n  onDragEnd = (e, id) => {\n    const { updatePointPosition } = this.props;\n    // eslint-disable-next-line\n    const coordinates = e.originalEvent.target.geometry._coordinates;\n\n    updatePointPosition(coordinates, id);\n  }\n\n  getPolylineGeometry() {\n    const { orderedPoints } = this.state;\n    \n    return orderedPoints.map(point => (\n      [\n        point.lng,\n        point.lat,\n      ]\n    ));\n  }\n\n  renderPlacemark(point, index) {\n    const coordinates = [\n      parseFloat(point.lng),\n      parseFloat(point.lat),\n    ];\n\n    const placeMark = {\n      geometry: {\n        type: \"Point\",\n        coordinates,\n      },\n      properties: {\n        iconContent: index + 1,\n        hintContent: point.name,\n        balloonContentHeader: point.name,\n        balloonContentBody: point.description,\n      },\n      options: {\n        preset: 'twirl#redDotIcon',\n        draggable: true,\n        hintHideTimeout: 0,\n      },\n      modules: ['geoObject.addon.balloon', 'geoObject.addon.hint'],\n    };\n    \n    return (\n      <Placemark\n        key={point.id}\n        onDragEnd={(e) => this.onDragEnd(e, point.id)}\n        {...placeMark}\n      />\n    );\n  }\n  \n  render() {\n    const { onMapLoad } = this.props;\n\n    const { orderedPoints } = this.state;\n\n    return (\n      <YMap\n        state={this.state}\n        defaultState={this.state}\n        width=\"100%\"\n        height=\"100%\"\n        onLoad={onMapLoad}\n        onError={(error) => console.log(error)}\n      >\n        {orderedPoints.map((point, index) => (\n          this.renderPlacemark(point, index)\n        ))}\n        <Polyline geometry={this.getPolylineGeometry(orderedPoints)} />\n      </YMap>\n    );\n  }\n};\n\nconst mapStateToProps = (state) => ({\n  pointsById: state.points.byId,\n  ids: state.points.ids,\n});\n\nconst mapActionCreators = { updatePointPosition };\n\nexport default connect(mapStateToProps, mapActionCreators)(Map);","import * as actionTypes from './actionTypes';\n\nexport const fetchAddressList = () => ({ \n  type: actionTypes.ADDRESS_LIST_FETCH, \n});\n\nexport const fetchAddressListSuccess = (data) => ({\n  type: actionTypes.ADDRESS_LIST_FETCH_SUCCESS, \n  addressList: data,\n});\n\nexport const addPoint = (address, id) => ({\n  type: actionTypes.POINT_ADD,\n  address,\n  id,\n});\n\nexport const removePoint = (id) => ({\n  type: actionTypes.POINT_REMOVE,\n  id,\n});\n\nexport const changePointOrder = (dropData) => ({\n  type: actionTypes.POINT_ORDER_CHANGE,\n  ...dropData,\n});\n\nexport const updatePointPosition = (coordinates, id) => ({\n  type: actionTypes.POINT_POSITION_CHANGE,\n  coordinates,\n  id,\n});\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", {\n  fill: \"none\",\n  fillRule: \"evenodd\",\n  transform: \"translate(1 1)\",\n  strokeWidth: 2\n}, React.createElement(\"circle\", {\n  cx: 22,\n  cy: 22,\n  r: 6.38895,\n  strokeOpacity: 0\n}, React.createElement(\"animate\", {\n  attributeName: \"r\",\n  begin: \"1.5s\",\n  dur: \"3s\",\n  values: \"6;22\",\n  calcMode: \"linear\",\n  repeatCount: \"indefinite\"\n}), React.createElement(\"animate\", {\n  attributeName: \"stroke-opacity\",\n  begin: \"1.5s\",\n  dur: \"3s\",\n  values: \"1;0\",\n  calcMode: \"linear\",\n  repeatCount: \"indefinite\"\n}), React.createElement(\"animate\", {\n  attributeName: \"stroke-width\",\n  begin: \"1.5s\",\n  dur: \"3s\",\n  values: \"2;0\",\n  calcMode: \"linear\",\n  repeatCount: \"indefinite\"\n})), React.createElement(\"circle\", {\n  cx: 22,\n  cy: 22,\n  r: 14.389,\n  strokeOpacity: 0\n}, React.createElement(\"animate\", {\n  attributeName: \"r\",\n  begin: \"3s\",\n  dur: \"3s\",\n  values: \"6;22\",\n  calcMode: \"linear\",\n  repeatCount: \"indefinite\"\n}), React.createElement(\"animate\", {\n  attributeName: \"stroke-opacity\",\n  begin: \"3s\",\n  dur: \"3s\",\n  values: \"1;0\",\n  calcMode: \"linear\",\n  repeatCount: \"indefinite\"\n}), React.createElement(\"animate\", {\n  attributeName: \"stroke-width\",\n  begin: \"3s\",\n  dur: \"3s\",\n  values: \"2;0\",\n  calcMode: \"linear\",\n  repeatCount: \"indefinite\"\n})), React.createElement(\"circle\", {\n  cx: 22,\n  cy: 22,\n  r: 4.54142\n}, React.createElement(\"animate\", {\n  attributeName: \"r\",\n  begin: \"0s\",\n  dur: \"1.5s\",\n  values: \"6;1;2;3;4;5;6\",\n  calcMode: \"linear\",\n  repeatCount: \"indefinite\"\n})));\n\nvar SvgSpinner = function SvgSpinner(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    width: 45,\n    height: 45,\n    viewBox: \"0 0 45 45\",\n    stroke: \"#000\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgSpinner, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/spinner.4388d025.svg\";\nexport { ForwardRef as ReactComponent };","import styled from 'styled-components';\n\nconst regularSide = '20px';\nconst largeSide = '100px';\n\nexport const SpinnerIcon = styled.i`\n  display: block;\n  width: ${(props) => props.large ? largeSide : regularSide};\n  height: ${(props) => props.large ? largeSide : regularSide};\n\n  svg {\n    stroke: ${(props) => props.color};\n    width: 100%;\n    height: 100%;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ReactComponent as IconSVG } from 'assets/svg/spinner.svg';\n\nimport { SpinnerIcon } from './Spinner.styled';\n\nconst Spinner = ({ \n  large,\n  color,\n}) => (\n  <SpinnerIcon\n    large={large}\n    color={color}\n    alt=\"spinner\"\n  >\n    <IconSVG />\n  </SpinnerIcon>\n);\n\nSpinner.propTypes = {\n  large: PropTypes.bool,\n  color: PropTypes.string,\n};\n\nSpinner.defaultProps = {\n  large: false,\n  color: 'dodgerblue',\n};\n\nexport default Spinner;","import styled from 'styled-components';\n\nexport const AddressInputBlock = styled.div`\n  background-color: #fff;\n  border-radius: 8px;\n  padding: 5px 10px;\n  border: 1px solid #e4e4e4;\n  width: 392px;\n  display: flex;\n  flex-direction: row;\n  z-index: 3;\n  position: relative;\n  box-shadow: none;\n  transition: ease 0.3s box-shadow;\n  align-items: center;\n\n  @media screen and (max-width: 448px) {\n    width: 100%;\n    border-radius: 0;\n  }\n\n  > div {\n    flex-grow: 1;\n  }\n`;\n\nexport const Input = styled.input`\n  font-size: 16px;\n  font-family: 'Roboto Slab', serif;\n  border-radius: 3px;\n  border: none;\n  height: 24px;\n  outline: none;\n  width: 100%;\n  box-sizing: border-box;\n`;\n\nexport const EnterButtonIcon = styled.span`\n  position: relative;\n  display: block;\n  border-radius: 3px;\n  border: 1px solid #ccc;\n  background-color: #fefefe;\n  width: 25px;\n  height: 20px;\n\n  &:before,\n  &:after {\n    content: '';\n    position: absolute;\n  }\n\n  &:before {\n    border-top: 3px solid transparent;\n    border-bottom: 3px solid transparent;\n    border-right: 3px solid #555;\n    left: 6px;\n    top: 9px;\n    position: absolute;\n  }\n\n  &:after {\n    width: 8px;\n    height: 8px;\n    border-right: 1px solid #555;\n    border-bottom: 1px solid #555;\n    top: 4px;\n    left: 9px;\n    border-bottom-right-radius: 2px;\n  }\n`;\n\nexport default {\n  AddressInputBlock,\n  Input,\n  EnterButtonIcon, \n};  ","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { withYMaps } from 'react-yandex-maps';\nimport debounce from 'lodash/debounce';\nimport OutsideClickHandler from 'react-outside-click-handler';\nimport { formatGeocoderResponse } from 'helpers';\n\nimport Spinner from '../Spinner';\n\nimport {\n  AddressInputBlock,\n  Input,\n  EnterButtonIcon,\n} from './AddressInput.styled';\n\nclass AddressInput extends Component {\n  static propTypes = {\n    onClickOutside: PropTypes.func.isRequired,\n    fetchAddressList: PropTypes.func.isRequired,\n    fetchAddressListSuccess: PropTypes.func.isRequired,\n    isAddressFetching: PropTypes.bool.isRequired,\n    isAddressListVisible: PropTypes.bool.isRequired,\n    onKeyDown: PropTypes.func.isRequired,\n  };\n\n  constructor(props) {\n    super(props);\n    this.debouncedFetchAddressList = debounce(this.fetchAddressList, 500);\n  }\n\n  fetchAddressList = async value => {\n    const {\n      fetchAddressList, \n      fetchAddressListSuccess, \n    } = this.props;\n    // eslint-disable-next-line\n    const { geocode } = this.props.ymaps;\n\n    fetchAddressList();\n    const result = await geocode(value);\n    const formattedData = formatGeocoderResponse(result.geoObjects);\n    fetchAddressListSuccess(formattedData);\n  };\n\n  handleInputChange = e => {\n    e.persist();\n    const { value } = e.target;\n\n    this.debouncedFetchAddressList(value);\n  };\n\n  render() {\n    const {\n      onClickOutside,\n      onKeyDown,\n      isAddressFetching,\n      isAddressListVisible,\n    } = this.props;\n\n    const isEnterIconVisible = !isAddressFetching && isAddressListVisible;\n\n    return (\n      <AddressInputBlock>\n        <OutsideClickHandler onOutsideClick={onClickOutside}>\n          <Input\n            data-e2e-id=\"address-input\"\n            type=\"text\"\n            placeholder=\"Search...\"\n            onChange={this.handleInputChange}\n            onKeyDown={onKeyDown}\n          />\n        </OutsideClickHandler>\n        {isAddressFetching && <Spinner />}\n        {isEnterIconVisible && <EnterButtonIcon />}\n      </AddressInputBlock>\n    );\n  }\n}\n\nexport default withYMaps(AddressInput);\n","import { darken } from 'polished';\n\nexport default () => `\n  border-radius: 3px;\n  border: none;\n  height: 24px;\n  width: 24px;\n  outline: none;\n  transition: ease .3s background-color;\n  background-color: #fff;\n  padding: 0;\n\n  &:hover {\n    background-color: ${darken(0.05, '#fff')};\n    cursor: pointer;\n  }\n`;\n","import styled from 'styled-components';\nimport button from 'styles/styled-mixins/button';\n\nexport const AddressItemBlock = styled.li`\n  display: flex;\n  padding: 4px;\n`;\n\nexport const ItemName = styled.span`\n  flex-grow: 2;\n  cursor: default;\n  padding-left: 5px;\n`;\n\nexport const AddButton = styled.button`\n ${button}\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { generateAddressId } from 'helpers';\n\nimport {\n  AddressItemBlock,\n  ItemName,\n  AddButton,\n} from './AddressItem.styled';\n\nconst AddressItem = ({\n address, handleAddClick, \n}) => {\n  return (\n    <AddressItemBlock\n      data-e2e-id=\"address-item\"\n    >\n      <ItemName>\n        {address.name}\n      </ItemName>\n      <AddButton\n        onClick={() => handleAddClick(address, generateAddressId())}\n      >\n        <i className=\"icofont-plus\" />\n      </AddButton>\n    </AddressItemBlock>\n  );\n}\n\nAddressItem.propTypes = {\n  address: PropTypes.shape({\n    description: PropTypes.string,\n    lat: PropTypes.string.isRequired,\n    lng: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n  }),\n  handleAddClick: PropTypes.func.isRequired,\n};\n\nAddressItem.defaultProps = { address: {} };\n \nexport default AddressItem;","import styled from 'styled-components';\n\nexport const AddressListContainer = styled.ul`\n  margin: 0 10px;\n  background-color: #fff;\n  border-bottom-left-radius: 4px;\n  border-bottom-right-radius: 4px;\n  border: 1px solid #e4e4e4;\n  position: relative;\n  padding-top: 10px;\n  top: -10px;\n  z-index: 2;\n  max-height: 300px;\n  overflow: auto;\n  display: ${(props) => props.isVisible ? 'block' : 'none'};\n`;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { addressShape } from 'store/reducers/addresses';\nimport PropTypes from 'prop-types';\nimport AddressItem from '../AddressItem';\n\nimport { AddressListContainer } from './AddressList.styled';\n\nconst AddressList = ({ \n  addresses, \n  isVisible, \n  addPoint,\n}) => {\n  return (\n    <AddressListContainer isVisible={isVisible}>\n      {addresses.map((address, index) => (\n        <AddressItem\n          address={address}\n          key={`address-${index}`}\n          handleAddClick={addPoint}\n        />\n      ))}\n    </AddressListContainer>\n  );\n};\n\nAddressList.propTypes = {\n  addresses: PropTypes.arrayOf(PropTypes.shape(addressShape)).isRequired,\n  isVisible: PropTypes.bool.isRequired,\n  addPoint: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({ addresses: state.addresses.list });\n \nexport default connect(mapStateToProps, null)(AddressList);","import styled from 'styled-components';\n\nexport const AddressBlock = styled.div`\n  z-index: 2;\n  position: fixed;\n  top: 20px;\n  left: 20px;\n\n  @media screen and (max-width: 448px) {\n    top: 0;\n    left: 0;\n    width: 100%;\n  }\n`;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { addressShape } from 'store/reducers/addresses';\nimport {\n  fetchAddressList,\n  fetchAddressListSuccess,\n  addPoint,\n} from 'store/actionCreators';\n\nimport {\n  generateAddressId,\n} from 'helpers';\n\nimport AddressInput from '../AddressInput';\nimport AddressList from '../AddressList';\n\nimport { AddressBlock } from './Address.styled';\n\n\nexport class Address extends Component {\n\n  state = { isAddressListVisible: false }\n\n  static propTypes = {\n    addresses: PropTypes.arrayOf(PropTypes.shape(addressShape)).isRequired,\n    fetchAddressList: PropTypes.func.isRequired,\n    fetchAddressListSuccess: PropTypes.func.isRequired,\n    addPoint: PropTypes.func.isRequired,\n    isAddressFetching: PropTypes.bool.isRequired,\n  }\n\n  componentDidUpdate(prevProps) {\n    const { addresses } = this.props;\n    \n    if (addresses.length && !prevProps.addresses.length) {\n      this.showAddressList()\n    }\n  }\n\n  onClickOutside = () => {\n    this.hideAddressList();\n  }\n\n  handleAddressInputKeyDown = (e) => {\n    const {\n      addresses,\n      addPoint, \n    } = this.props;\n\n    if (!addresses.length) return;\n\n    if (e.keyCode === 13) {\n      addPoint(addresses[0], generateAddressId());\n      this.hideAddressList();\n    }\n  }\n\n  showAddressList() {\n    this.setState({ isAddressListVisible: true });\n  }\n\n  hideAddressList() {\n    this.setState({ isAddressListVisible: false });\n  }\n\n  render() {\n    const {\n      onClickOutside,\n      handleAddressInputKeyDown,\n    } = this;\n\n    const {\n      fetchAddressList,\n      fetchAddressListSuccess,\n      addPoint,\n      addresses,\n      isAddressFetching,\n    } = this.props;\n\n    const { isAddressListVisible } = this.state;\n\n    return ( \n      <AddressBlock>\n        <AddressInput\n          fetchAddressList={fetchAddressList}\n          fetchAddressListSuccess={fetchAddressListSuccess}\n          onClickOutside={onClickOutside}\n          isAddressFetching={isAddressFetching}\n          onKeyDown={handleAddressInputKeyDown}\n          isAddressListVisible={isAddressListVisible}\n        /> \n        <AddressList \n          addresses={addresses}\n          isVisible={isAddressListVisible}\n          addPoint={addPoint} \n        /> \n      </AddressBlock>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  addresses: state.addresses.list,\n  isAddressFetching: state.addresses.isFetching,\n});\n\nconst mapActionCreators = {\n  fetchAddressList,\n  fetchAddressListSuccess,\n  addPoint,\n};\n\nexport default connect(mapStateToProps, mapActionCreators)(Address);","import styled from 'styled-components';\nimport button from 'styles/styled-mixins/button';\n\nexport const PointContainer = styled.div`\n  padding: 5px;\n  display: flex;\n  flex-direction: row;  \n  align-items: center;\n  margin-bottom: 4px;\n  position: relative;\n`;\n\nexport const DragHandle = styled.div`\n  position: relative;\n  top: 1px;\n`;\n\nexport const PointName = styled.span`\n  flex-grow: 2;\n  padding: 5px;\n  cursor: default;\n`;\n\nexport const RemoveButton = styled.button`\n  ${button};\n`;\n\nexport const ButtonIcon = styled.i`\n  font-size: 15px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { pointShape } from 'store/reducers/points';\nimport {\n  PointContainer,\n  DragHandle,\n  PointName,\n  RemoveButton,\n  ButtonIcon,\n} from './Point.styled';\n\nconst Point = ({\n point, onPointRemove, provided, \n}) => {\n  return (\n    <PointContainer>\n      <DragHandle\n        {...provided.dragHandleProps}\n      >\n        <i className=\"icofont-navigation-menu\" />\n      </DragHandle>\n      <PointName>\n        {point.name}\n      </PointName>\n      <RemoveButton\n        onClick={() => onPointRemove(point.id)}\n      >\n        <ButtonIcon className=\"icofont-bin\" />\n      </RemoveButton>\n    </PointContainer>\n  );\n}\n\nPoint.propTypes = {\n  point: PropTypes.shape(pointShape),\n  onPointRemove: PropTypes.func.isRequired,\n  // eslint-disable-next-line\n  provided: PropTypes.object.isRequired,\n};\n\nPoint.defaultProps = { point: {} };\n \nexport default Point;","import styled from 'styled-components';\n\nexport const PointsListContainer = styled.div`\n  min-height: 30px;\n  max-height: 400px;\n  background-color: #fff;\n  border-radius: 8px;\n  border: 1px solid #e4e4e4;\n  z-index: 1;\n  min-width: 200px;\n  padding-right: 5px;\n\n  @media screen and (max-width: 448px) {\n    width: 100%;\n    padding-right: 0;\n    max-height: 250px;\n    overflow: auto;\n  }\n`;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { pointShape } from 'store/reducers/points';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\n\nimport { removePoint, changePointOrder } from 'store/actionCreators';\nimport Point from '../Point';\n\n\nimport { PointsListContainer } from './PointsList.styled';\n\nclass PointsList extends Component {\n  static propTypes = {\n    pointsById: PropTypes.shape(pointShape).isRequired,\n    ids: PropTypes.arrayOf(PropTypes.number).isRequired,\n    removePoint: PropTypes.func.isRequired,\n    changePointOrder: PropTypes.func.isRequired,\n  }\n    \n  onDragEnd = (result) => {\n    if (result.reason !== \"DROP\") return;\n\n    const { changePointOrder } = this.props;\n\n    changePointOrder({\n      oldIndex: result.source.index,\n      newIndex: result.destination.index,\n      addressId: result.draggableId,\n    });\n  }\n\n  render() {\n    const { onDragEnd } = this;\n    \n    const {\n      pointsById,\n      ids,\n      removePoint,\n    } = this.props;\n\n    if (!ids.length) {\n      return null;\n    }\n\n    return (\n      <DragDropContext\n        onDragEnd={onDragEnd}\n      >\n        <Droppable droppableId=\"points-droppable\">\n          {provided => (\n            <PointsListContainer\n              ref={provided.innerRef}\n              {...provided.droppableProps}\n            >\n              {ids.map((id, index) => (\n                <Draggable\n                  key={id}\n                  draggableId={id}\n                  index={index}\n                >\n                  {provided => (\n                    <div \n                      ref={provided.innerRef} \n                      {...provided.draggableProps}\n                    >\n                      <Point\n                        point={pointsById[id]}\n                        onPointRemove={removePoint}\n                        provided={provided}\n                      />\n                    </div>\n                  )}\n                </Draggable>\n              ))}\n              {provided.placeholder}\n              {/* <button className=\"points-list__hide-button\"></button> */}\n            </PointsListContainer>\n          )}\n        </Droppable>  \n      </DragDropContext>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  ids: state.points.ids,\n  pointsById: state.points.byId,\n});\n\nconst mapActionCreators = {\n  removePoint,\n  changePointOrder,\n};\n \nexport default connect(mapStateToProps, mapActionCreators)(PointsList);","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  height: 100vh;\n`;\n\nexport const PointsListWrapper = styled.div`\n  position: fixed;\n  z-index: 1;\n  left: 0;\n  top: 0;\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  padding-left: 20px;\n  width: 0;\n\n  @media screen and (max-width: 448px) {\n    top: auto;\n    bottom: 0;\n    height: auto;\n    display: block;\n    width: 100%;\n    padding-left: 0;\n  }\n`;\n\nexport const LoadingOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: #fff;\n  z-index: 5;\n`;","import React, { Component } from 'react';\nimport store from 'store';\nimport { Provider } from 'react-redux';\nimport { YMaps } from 'react-yandex-maps';\n\nimport Map from '../Map';\nimport Address from '../Address';\nimport PointsList from '../PointsList';\nimport Spinner from '../Spinner';\n\nimport { Wrapper, PointsListWrapper, LoadingOverlay } from './App.styled';\n\nconst YMAPS_API_KEY = '7547cd62-6ddd-4fe8-bbef-55ea5c7e70bf';\n\nclass App extends Component {\n  state = { isMapLoaded: false };\n\n  handleMapLoad = () => {\n    this.setState({ isMapLoaded: true });\n  };\n\n  render() {\n    const { isMapLoaded } = this.state;\n\n    return (\n      <>\n        {!isMapLoaded && (\n          <LoadingOverlay>\n            <Spinner large />\n          </LoadingOverlay>\n        )}\n        <Provider store={store}>\n          <YMaps\n            query={{\n              ns: 'use-load-option',\n              apikey: YMAPS_API_KEY,\n              load: 'geocode',\n            }}\n          >\n            <Wrapper>\n              <Map onMapLoad={this.handleMapLoad} />\n              {isMapLoaded && <Address />}\n              <PointsListWrapper>\n                <PointsList />\n              </PointsListWrapper>\n            </Wrapper>\n          </YMaps>\n        </Provider>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\n/* eslint-disable */\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n/* eslint-enable */\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nimport 'styles/normalize.css';\nimport 'styles/reset.css';\nimport 'styles/icofont/icofont.min.css';\nimport 'styles/general.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}